activity_TFE_games = {
		
	###################
	# Conditions
	###################

	is_shown = {
		highest_held_title_tier > tier_barony
		NOT = {
			game_start_date = 532.2.1
		}
		is_landed = yes
		#OR = {
			# I can do gladiator games
			culture = {
				has_cultural_parameter = can_use_sponsor_gladiator_games_decision
			}
			# I can do chariot games
			#OR = {
			#	has_government = imperial_government
			#	has_government = imperial_cult_government
			#	has_government = autocratic_government
			#}
		#}
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= 500
		}
	}

	#can_start = {
	#	any_realm_county = { this = title:c_shazhou }
	#}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			NOT = { is_incapable = yes }
		}
		# If no one shows up
		# trigger_if = {
		# 	limit = {
		# 		is_current_phase_active = yes
		# 	}
		# 	has_attending_activity_guests = yes
		# }
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		# if = { # No one shows up
		# 	limit = {
		# 		has_attending_activity_guests = no
		# 	}
		# 	scope:activity = {
		# 		activity_type = { save_scope_as = activity_type }
		# 		activity_location = { save_scope_as = location }
		# 	}
		# 	scope:host = { trigger_event = activity_system.0100 }
		# }
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	###################
	# AI Score
	###################

	ai_will_do = {
		value = 0
		
		# Base
		add = {
			value = 30
			desc = "base"
		}
		if = {
			limit = { short_term_gold <= TFE_games_predicted_cost }
			add = {
				value = -5000
			}
		}
		# Personality
		if = { # Avoids responsibilities
			limit = { has_trait = lazy }
			add = {
				value = -20
				desc = lazy
			}
		}
		else_if = { # Better things to do
			limit = { has_trait = diligent }
			add = {
				value = 10
				desc = diligent
			}
		}
		if = { # Likes showing off
			limit = { has_trait = arrogant }
			add = {
				value = 20
				desc = arrogant
			}
		}
		else_if = { #
			limit = { has_trait = humble }
			add = {
				value = -10
				desc = humble
			}
		}
		if = { # In it to win it
			limit = { has_trait = ambitious }
			add = {
				value = 10
				desc = ambitious
			}
		}
		else_if = { #
			limit = { has_trait = content }
			add = {
				value = -10
				desc = content
			}
		}
		if = { # Likes to socialize
			limit = { has_trait = gregarious }
			add = {
				value = 10
				desc = gregarious
			}
		}
		else_if = {
			limit = { has_trait = shy }
			add = {
				value = -10
				desc = shy
			}
		}
		if = {
			limit = { has_trait = reclusive }
			add = {
				value = -25
				desc = reclusive
			}
		}
		# Court
		if = {
			limit = {
				has_royal_court = yes 
				has_court_type = court_warlike
			}
			add = {
				value = 15
				desc = court_warlike
			}
		}
		# Education
		if = {
			limit = { has_trait = education_martial }
			add = {
				value = 25
				desc = education_martial
			}
		}
		if = {
			limit = { has_trait = education_martial_prowess }
			add = {
				value = 25
				desc = education_martial_prowess
			}
		}
		# Culture
		if = {
			limit = { 
				culture = { has_cultural_tradition = tradition_bread_and_circuses }
			}
			add = {
				value = 50
			}
		}
		if = { # Bellicose
			limit = {
				culture = { has_cultural_pillar = ethos_bellicose }
			}
			add = {
				value = 15
				desc = ethos_bellicose
			}
		}
		# Stress
		if = { # Low Stress
            limit = { stress >= lower_than_baseline_stress }
            add = {
            	value = 10
            	desc = "lower_than_baseline_stress"
            }
        }
        if = { # High Stress
        	limit = { stress >= higher_than_baseline_stress }
        	add = {
        		value = 10
        		desc = "higher_than_baseline_stress"
        	}
        }
        if = { # Very High Stress
        	limit = { stress >= high_stress }
        	add = {
        		value = 10
        		desc = "high_stress"
        	}
        }
        # Economic Archetype
		if = { # Too busy booming the economy
            limit = {
                OR = {
                    ai_has_economical_boom_personality = yes
                    has_character_flag = ai_boom
                }
            }
            add = {
            	value = -50
            	desc = "Builder"
            }
        }
        if = {
        	limit = { ai_has_warlike_personality = yes }
        	add = {
            	value = 25
            	desc = "Warlike"
            }
        }
        # Economy Sanity
        if = { # Work first, play later
            limit = {
                exists = capital_county
                capital_county.title_province = { free_building_slots > 0 }
            }
            add = {
            	value = -35
            	desc = "Work first, play later"
            }
        }
	}

	ai_check_interval = 60

	ai_will_select_province = {
		# Base
		add = {
			value = 5
			desc = "base"
		}
		# Buildings
		if = {
			limit = {
				has_building = the_colosseum_01
			}
			add = {
				value = 100
			}
		}
		#Military Buildings
		if = {
			limit = {
				OR = {
					has_building_or_higher = barracks_01
					has_building_or_higher = smiths_01
					has_building_or_higher = regimental_grounds_01
					has_building_or_higher = military_camps_01
					has_building_or_higher = war_camps_01
					has_building_or_higher = royal_armory_01
					has_building_or_higher = blacksmiths_01
				}
			}
			add = 10
		}
	}

	###################
	# Costs, Start Locations, Etc.
	###################

	is_grand_activity = no
	is_single_location = yes

	province_filter = realm
	ai_province_filter = domain
	wait_time_before_start = { months = 3 }
	max_guest_arrival_delay_time = { months = 3 }
	cooldown = { years = 10 }

	cost = {
		gold = {
			add = {
				add = {
					value = TFE_games_base_cost
					desc = TFE_games_base_cost
				}
				add = {
					value = TFE_games_base_cost
					multiply = activity_cost_scale_by_era
					subtract = TFE_games_base_cost
					desc = activity_cost_scale_by_era_desc
				}
				if = {
					limit = {
						has_character_flag = senate_funds_games
					}
					subtract = {
						value = TFE_games_base_cost
						multiply = activity_cost_scale_by_era
						desc = senate_funds_games_tt
					}
				}
				if = {
					limit = {
						has_character_flag = senate_funds_games_half
					}
					subtract = {
						value = TFE_games_base_cost
						multiply = activity_cost_scale_by_era
						multiply = 0.5
						desc = senate_funds_games_tt
					}
				}
				if = {
					limit = { scope:province ?= { has_building = the_colosseum_01 } }
					subtract = {
						value = TFE_games_base_cost
						multiply = TFE_games_colosseum_discount
						desc = activity_colosseum_games_discount_desc
					}
				}
				if = {
					limit = {
						OR = {
							scope:province ?= { terrain = mountains }
							scope:province ?= { terrain = desert_mountains }
							scope:province ?= { terrain = floodplains }
							scope:province ?= { terrain = wetlands }
						}
					}
					add = {
						value = TFE_games_base_cost
						multiply = activity_cost_scale_by_era
						multiply = 0.5
						desc = activity_TFE_games_province_desc_terrain_bad_cost
					}
				}
				if = {
					limit = { 
						OR = {
							scope:province ?= { has_building_or_higher = barracks_01 }
							scope:province ?= { has_building_or_higher = smiths_01 }
							scope:province ?= { has_building_or_higher = regimental_grounds_01 }
							scope:province ?= { has_building_or_higher = military_camps_01 }
							scope:province ?= { has_building_or_higher = war_camps_01 }
							scope:province ?= { has_building_or_higher = royal_armory_01 }
							scope:province ?= { has_building_or_higher = blacksmiths_01 }
						}
					} 
					subtract = {
						value = TFE_games_base_cost
						multiply = TFE_games_military_buildings_discount
						desc = activity_military_buildings_games_discount_desc
					}
				}
				min = 0
			}
		}
	}

	ui_predicted_cost = {
		# All costs are balanced on County/Early Era starting point
		gold = {
			# Base Cost
			add = {
				value = TFE_games_base_cost
				desc = TFE_games_base_cost
			}
			# Scale by Era
			multiply = {
				value = activity_cost_scale_by_era
				desc = activity_cost_scale_by_era_desc
			}
			# Make it a multiple of 5 (rounded up)
			divide = 5
			ceiling = yes 
			multiply = 5
		}
	}

	max_province_icons = 3

	
	province_score = {
		value = 0
		add = {
			value = county.development_level
			divide = 2
		}
		# BUILDINGS
		if = {
			limit = { has_building = the_colosseum_01 }
			add = 25
		}
		if = {
			limit = {
				OR = {
					has_building_or_higher = barracks_01
					has_building_or_higher = smiths_01
					has_building_or_higher = regimental_grounds_01
					has_building_or_higher = military_camps_01
					has_building_or_higher = war_camps_01
					has_building_or_higher = royal_armory_01
					has_building_or_higher = blacksmiths_01
				}
			}
			add = 10
		}
		if = {
			limit = {
				county.development_level <= 5
			}
			add = -10
		}
		if = {
			limit = {
				county.development_level >= 10
			}
			add = 10
		}
		if = {
			limit = {
				county.development_level >= 20
			}
			add = 20
		}
	}

	province_description = {
		#Colosseum Check
		triggered_desc = {
			trigger = {
				barony = title:b_roma
			}
			desc = activity_colosseum_games_desc
		}
		# -- / double minus bad
		triggered_desc = {
			trigger = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
					terrain = floodplains
					terrain = wetlands
				}
			}
			desc = activity_TFE_games_province_desc_terrain_bad
		}
		# +++ / always a good thing
		triggered_desc = {
			trigger = { 
				county.development_level >= great_development_level 
			}
			desc = activity_TFE_games_province_desc_development_great
		}
		# ++ / double plus good
		triggered_desc = {
			trigger = { 
				county.development_level >= good_development_level 
				NOT = {
					county.development_level >= great_development_level
				}
			}
			desc = activity_TFE_games_province_desc_development_good
		}
		# + / plus good
		triggered_desc = {
			trigger = { 
				county.development_level >= medium_development_level 
				NOT = {
					county.development_level >= good_development_level
				}
			}
			desc = activity_TFE_games_province_desc_development_ok
		}
		triggered_desc = {
			trigger = { 
				OR = {
					has_building_or_higher = barracks_01
					has_building_or_higher = smiths_01
					has_building_or_higher = regimental_grounds_01
					has_building_or_higher = military_camps_01
					has_building_or_higher = war_camps_01
					has_building_or_higher = royal_armory_01
					has_building_or_higher = blacksmiths_01
				}
			}
			desc = activity_TFE_games_province_desc_military_buildings
		}
	}

	is_location_valid = {
		has_holding = yes
		NOT = { has_holding_type = church_holding }
	}

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {

		#########
		# Gladiator or Chariot
		#########

		# Special type HAS to be "special_type" to pop up the pretty art
		special_type = {
			#TFE_games_type_chariot = {
			#	# Normally, default = yes will make one option the default
			#	default = {
			#		NOT = { religion = { is_in_family = rf_pagan } }
			#	}
			#	ai_will_do = {
			#		value = 10
			#	}
			#}
			# Only available if Bread and Circuses
			TFE_games_type_gladiator = {
				default = {
					AND = {
						religion = religion:hellenism_religion
						culture = {
							has_cultural_parameter = can_use_sponsor_gladiator_games_decision
						}
					}
				}		
				is_valid = {
					culture = {
						has_cultural_parameter = can_use_sponsor_gladiator_games_decision
					}
				}
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = zealous
						}
						add = 10
					}
				}
			}
		}

		#########
		# Additional Cost Options
		#########

		TFE_activities_option_accommodations = {
			TFE_activities_option_accommodations_bad = {
				on_start = {
					scope:host = {
						add_prestige = medium_prestige_loss
					}
				}
				cost = {
					gold = {
						add = {
							add = {
								value = TFE_games_option_bad_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_activities_option_accommodations_bad
							}
						}
					}
				}
				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 30
					}
					if = {
						limit = {
							has_trait = greedy
						}
						add = 30
					}
					if = {
						limit = {
							OR = {
								has_trait = lazy
								has_trait = temperate
								has_trait = content
							}
						}
						add = 15
					}
					if = {
						limit = {
							has_trait = humble
						}
						add = 10
					}
				}
			}
			TFE_activities_option_accommodations_normal = {
				default = yes

				cost = {
					gold = {
						add = {
							add = {
								value = TFE_games_option_normal_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_activities_option_accommodations_normal
							}
						}
						if = {
							limit = {
								has_character_flag = senate_funds_games
							}
							subtract = {
								value = TFE_games_option_normal_cost
								multiply = activity_cost_scale_by_era
								desc = senate_funds_games_tt
							}
						}
						if = {
							limit = {
								has_character_flag = senate_funds_games_half
							}
							subtract = {
								value = TFE_games_option_normal_cost
								multiply = activity_cost_scale_by_era
								multiply = 0.5
								desc = senate_funds_games_tt
							}
						}
					}
				}

				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 50
					}
					if = {
						limit = {
							has_character_flag = senate_funds_games
						}
						add = 5000
					}
					if = {
						limit = {
							has_character_flag = senate_funds_games_half
						}
						add = 2500
					}
				}
			}
			TFE_activities_option_accommodations_good = {

				on_start = {
					scope:host = {
						add_prestige = medium_prestige_value
					}
				}

				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 30
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 10
					}
					if = {
						limit = {
							OR = {
								has_trait = diligent
								has_trait = gluttonous
								has_trait = ambitious
							}
						}
						add = 15
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 10
					}
				}

				cost = {
					gold = {	
						add = {
							add = {
								value = TFE_games_option_good_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_activities_option_accommodations_good
							}
						}
					}
				}
			}
			TFE_activities_option_accommodations_very_good = {

				on_start = {
					scope:host = {
						add_prestige = major_prestige_value
					}
				}

				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 30
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 30
					}
					if = {
						limit = {
							OR = {
								has_trait = diligent
								has_trait = gluttonous
								has_trait = ambitious
							}
						}
						add = 15
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 10
					}
				}

				cost = {
					gold = {	
						add = {
							add = {
								value = TFE_games_option_very_good_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_activities_option_accommodations_very_good
							}
						}
					}
				}
			}
		}

		TFE_games_option_fights = {
			TFE_games_option_fights_bad = {
				#is_valid = { is_gladiator_games = yes }
				on_start = {
					scope:host = {
						add_prestige = medium_prestige_loss
					}
				}
				cost = {
					gold = {
						add = {
							add = {
								value = TFE_games_option_bad_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_games_option_fights_bad
							}
						}
					}
				}
				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 30
					}
					if = {
						limit = {
							has_trait = greedy
						}
						add = 30
					}
					if = {
						limit = {
							OR = {
								has_trait = lazy
								has_trait = temperate
								has_trait = content
							}
						}
						add = 15
					}
					if = {
						limit = {
							has_trait = humble
						}
						add = 10
					}
				}
			}
			TFE_games_option_fights_normal = {
				#is_shown = { is_gladiator_games = yes }
				#if = {
				#	limit = {
				#		is_gladiator_games = yes
				#	}
					default = yes
				#}

				cost = {
					gold = {
						add = {
							add = {
								value = TFE_games_option_normal_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_games_option_fights_normal
							}
						}
						if = {
							limit = {
								has_character_flag = senate_funds_games
							}
							subtract = {
								value = TFE_games_option_normal_cost
								multiply = activity_cost_scale_by_era
								desc = senate_funds_games_tt
							}
						}
						if = {
							limit = {
								has_character_flag = senate_funds_games_half
							}
							subtract = {
								value = TFE_games_option_normal_cost
								multiply = activity_cost_scale_by_era
								multiply = 0.5
								desc = senate_funds_games_tt
							}
						}
					}
				}

				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 50
					}
					if = {
						limit = {
							has_character_flag = senate_funds_games
						}
						add = 5000
					}
					if = {
						limit = {
							has_character_flag = senate_funds_games_half
						}
						add = 2500
					}
				}
			}

			TFE_games_option_fights_good = {
				#is_shown = { is_gladiator_games = yes }
				on_start = {
					scope:host = {
						add_prestige = medium_prestige_value
					}
				}

				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 30
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 10
					}
					if = {
						limit = {
							OR = {
								has_trait = diligent
								has_trait = gluttonous
								has_trait = ambitious
							}
						}
						add = 15
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 10
					}
				}

				cost = {
					gold = {	
						add = {
							add = {
								value = TFE_games_option_good_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_games_option_fights_good
							}
						}
					}
				}
			}
			TFE_games_option_fights_very_good = {
				#is_shown = { is_gladiator_games = yes }
				on_start = {
					scope:host = {
						add_prestige = major_prestige_value
					}
				}

				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 30
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 30
					}
					if = {
						limit = {
							OR = {
								has_trait = diligent
								has_trait = gluttonous
								has_trait = ambitious
							}
						}
						add = 15
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 10
					}
				}

				cost = {
					gold = {	
						add = {
							add = {
								value = TFE_games_option_very_good_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_games_option_fights_very_good
							}
						}
					}
				}
			}
			TFE_games_option_fights_excellent = {
				#is_shown = { is_gladiator_games = yes }
				on_start = {
					scope:host = {
						add_prestige = massive_prestige_value
					}
				}

				ai_will_do = {
					value = 0
					add = { #Base amount
						value = 30
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 30
					}
					if = {
						limit = {
							OR = {
								has_trait = diligent
								has_trait = gluttonous
								has_trait = ambitious
							}
						}
						add = 15
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 10
					}
				}

				cost = {
					gold = {	
						add = {
							add = {
								value = TFE_games_option_excellent_cost
								multiply = activity_cost_scale_by_era
								desc = TFE_games_option_fights_excellent
							}
						}
					}
				}
			}
		}

	}

	###################
	# PHASES
	###################

	phases = {
		# Fights
		games_phase_fights = {		
			is_predefined = yes

			is_shown = { always = yes }
			is_valid = { always = yes }

			on_phase_active = {
				# Sort some stuff on the host.
				if = {
					limit = { this = scope:host }
					remove_character_flag = senate_funds_games
					remove_character_flag = senate_funds_games_half

					scope:activity = { progress_activity_phase_after = { weeks = 5 } }

					# Misc. old content variable.
					## Reduce alcohol stores if appropriate.					
					## Look for a target you're trying to befriend
					if = {
						limit = {
							any_scheme = {
								scheme_type = befriend
								scheme_target = {
									exists = involved_activity
									involved_activity = scope:activity
								}
							}
						}
						random_scheme = {
							limit = {
								scheme_type = befriend
								scheme_target = {
									exists = involved_activity
									involved_activity = scope:activity
								}
							}
							scheme_target = {
								save_scope_as = potential_friend
								scope:activity = {
									set_variable = {
										name = potential_friend
										value = scope:potential_friend
									}
								}
							}
							scheme_freeze = { days = 10 }
						}
					}
					# And now, the main event!
					## Check that there are guests apart from the feast host.
					if = {
						limit = {
							scope:activity = {
								any_attending_character = {
									count = 0
									NOT = {	this = scope:host }
								}
							}
						}
						# If there are no other guests, throw this event.
						## [sad period-appropriate trombone noises]
						trigger_event = TFE_gladiator_events.0002
					}
					## Otherwise, there are guests present.
					### The key event is chosen for the host, and fires other events from there to every participant.
					else = {
						trigger_event = {
							on_action = gladiator_opening_on_action
						}
					}
				}
			}
			
			on_weekly_pulse = {
				if = { #host
					limit = {
						this = scope:host
					}
					if = {
						limit = {
							#scope:TFE_games_option_fights ?= flag:TFE_games_option_fights_good
							scope:activity = { is_gladiator_fights_good = yes }
						}
						trigger_event = { on_action = gladiator_new_event_selection_host_good }
					}
					else_if = {
						limit = {
							scope:activity = { is_gladiator_fights_very_good = yes }
						}
						if = {
							limit = {
								scope:activity = {
									NOT = {
										exists = var:had_animal_intro
									}
								}
							}
							trigger_event = TFE_gladiator_events.0003
							scope:activity = {
								set_variable = had_animal_intro
							}
						}
						else = {
							trigger_event = { on_action = gladiator_new_event_selection_host_very_good }
						}
					}
					else_if = {
						limit = {
							scope:activity = { is_gladiator_fights_excellent = yes }
						}
						if = {
							limit = {
								scope:activity = {
									NOT = {
										exists = var:had_naval_intro
									}
								}
							}
							trigger_event = TFE_gladiator_events.0004
							scope:activity = {
								set_variable = had_naval_intro
							}
						}
						else = {
							trigger_event = { on_action = gladiator_new_event_selection_host_excellent }
						}
					}
					else_if = {
						limit = {
							scope:activity = { is_gladiator_fights_bad = yes }
						}
						trigger_event = { on_action = gladiator_new_event_selection_host_bad }
					}
					else = {
						trigger_event = { on_action = gladiator_new_event_selection_host_default }
					}
				}
				else_if = { #guest
					limit = {
						NOT = { this = scope:host }
					}
					if = {
						limit = {
							scope:activity = { is_lodgings_bad = yes }
						}
						trigger_event = { on_action = gladiator_new_event_selection_guest_bad }
					}
					else_if = {
						limit = {
							scope:activity = { is_lodgings_good = yes }
						}
						trigger_event = { on_action = gladiator_new_event_selection_guest_good }
					}
					else_if = {
						limit = {
							scope:activity = { is_lodgings_very_good = yes }
						}
						trigger_event = { on_action = gladiator_new_event_selection_guest_very_good }
					}
					else = {
						trigger_event = { on_action = gladiator_new_event_selection_guest_default }
					}
				}
			}
			on_end = {
				# Run conclusion stuff here
				# if = {
				# 	limit = { this = scope:host }
				# 	scope:activity = { progress_activity_phase_after = { weeks = 2 } }
				# }
			}
		}
	}
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {
		entries = {
			host_gains_diplo_xp host_gains_steward_xp host_gains_intrigue_xp
			guest_friendship guest_insulted hook_trusting_guest
			good_kitty good_puppy apa_executioner guest_brawl friend_lauds_efforts
			spouse_skill_diplomacy_improves spouse_impresses_clergy spouse_gives_hook spouse_gives_host_prestige
			spouse_insults_host guest_tells_fantastic_joke

			TFE_activities_leftover_food_giveaway TFE_activities_excellent_food
			TFE_activities_noble_privileges TFE_activities_lauded_food
			TFE_activities_guest_chokes_on_bone TFE_activities_courtly_vassals_appeased
			TFE_activities_ridiculed_food

			TFE_gladiator_relation_gains_friend TFE_gladiator_children_bonding
		}
		chance_of_no_event = 5
	}

	on_start = {
		set_variable = { # From -4 (crowd hates it, riots break out, revolt is imminent) to +4 (crowd loved it, they chant your name, it was very poggers as the kiddos say)
			name = result_counter
			value = 0
		}
	}

	# Once you arrive at the springs, trigger the relevant event(s)
	on_leave_travel_state = {

	}

	on_enter_passive_state = {	
		
	}

	on_complete = {
		if = {
			limit = { this = scope:host }
			create_character_memory = {
				type = TFE_gladiator_host_memory
			}
			scope:host = {
				TFE_gladiator_completed_log_entry_effect = yes
			}
			if = {
				limit = {
					exists = scope:activity.var:result_counter
					scope:activity.var:result_counter <= -3
				}
				add_prestige = medium_prestige_loss
				add_piety = minor_piety_loss
				scope:activity.activity_location.county = {
					change_county_control = -50
					add_county_modifier = { modifier = gladiatorial_games_very_bad_modifier years = 10 }
				}
			}
			else_if = {
				limit = {
					exists = scope:activity.var:result_counter
					scope:activity.var:result_counter > -3
					scope:activity.var:result_counter <= -1
				}
				add_prestige = minor_prestige_loss
				scope:activity.activity_location.county = {
					change_county_control = -20
					add_county_modifier = { modifier = gladiatorial_games_bad_modifier years = 10 }
				}
			}
			else_if = {
				limit = {
					OR = {
						NOT = { exists = scope:activity.var:result_counter }
						scope:activity.var:result_counter = 0
					}
				}
				add_prestige = minor_prestige_gain
			}
			else_if = {
				limit = {
					exists = scope:activity.var:result_counter
					scope:activity.var:result_counter >= 1
					scope:activity.var:result_counter < 3
				}
				add_prestige = medium_prestige_gain
				add_piety = minor_piety_gain
				scope:activity.activity_location.county = {
					change_county_control = 10
					add_county_modifier = { modifier = gladiatorial_games_good_modifier years = 10 }
				}
			}
			else_if = {
				limit = {
					exists = scope:activity.var:result_counter
					scope:activity.var:result_counter >= 3
				}
				add_prestige = major_prestige_gain
				add_piety = medium_piety_gain
				scope:activity.activity_location.county = {
					change_county_control = 25
					add_county_modifier = { modifier = gladiatorial_games_very_good_modifier years = 10 }
				}
				if = {
					limit = { exists = dynasty }
					dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
				}
			}
			
			scope:activity.activity_location.county = {
				save_scope_as = gladiatorcounty
			}
			if = {
				limit = { exists = dynasty }
				dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
			}
		}
		else = {			
			create_character_memory = {
				type = TFE_gladiator_guest_memory
				participants = {
					host = scope:host
				}
			}
		}
	}
	

	###################
	# GUEST HANDLING
	###################

	max_guests = 200

	allow_zero_guest_invites = yes

	open_invite = yes

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Magnates.
			4 = activity_invite_neighbouring_rulers

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			1 = activity_invite_rule_liege
			1 = activity_invite_rule_vassals
			2 = activity_invite_rule_fellow_vassals
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		is_adult = yes
		in_diplomatic_range = scope:host
		is_pool_guest = no
	}

	travel_entourage_selection = {
		weight = {
			value = standard_travel_entourage_additions
			if = {
				limit = {
					OR = {
						is_knight_of = scope:owner
						scope:owner.court_position:champion_court_position ?= this
					}
					trigger_if = {
						limit = { is_landed = yes }
						highest_held_title_tier = tier_barony
					}
					is_available = yes
				}
				add = 100
			}
			if = {
				limit = {
					is_landed = no
					OR = {
						is_spouse_of = scope:owner
						is_close_family_of = scope:owner
					}
					is_available = yes
				}
				add = 50
			}
		}

		max = 15
		ai_max = 3
		invite_rule_order = 1
   	}

	host_intents = {
		intents = { reduce_stress_intent }
		default = reduce_stress_intent
		player_defaults = { reduce_stress_intent }
	}

	guest_intents = {
		intents = { reduce_stress_intent }
		default = reduce_stress_intent
		player_defaults = { reduce_stress_intent }
	}

	guest_join_chance = {
		base = 10
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
		activity_guest_health_ai_accept_modifier = yes
	}

	##### Please fix graphics after this line

	### Graphics
	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			OR = {
	# 				has_graphical_mena_culture_group_trigger = yes
	# 				has_graphical_steppe_culture_group_trigger = yes
	# 				has_graphical_african_culture_group_trigger = yes
	# 			}
	# 		}
	# 	}
	# 	reference = "building_mena_feast_01_entity"
	# }

	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			has_graphical_india_culture_group_trigger = yes
	# 		}
	# 	}
	# 	reference = "building_indian_feast_01_entity"
	# }
	
	# map_entity = "building_western_feast_01_entity"

	# Travel
	background = { # Bridge
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_riverside_province = yes
				geographical_region = world_europe
				OR = {
					terrain = farmlands
					terrain = plains
					terrain = mountains
					terrain = hills
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_bridge.dds"
		environment = "environment_travel_bridge"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	
	background = { # Farmland, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_farm.dds"
		environment = "environment_travel_farmlands"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { # Farmland, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/farms.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #Desert, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_desert.dds"
		environment = "environment_travel_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = { #Desert, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/desert.dds"
		environment = "environment_event_bp1_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #forest snowy
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location ?= { hunt_snowy_forest_trigger = yes }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_hunt_snowy_forest.dds"
		environment = "environment_hunt_snowy_forest"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day" 
	}

	background = { #forest_pine
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_pine_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest_pine.dds"
		environment = "environment_event_forest_pine"
		ambience = "event:/SFX/Events/Backgrounds/coniferous_forest_day"
	}

	background = { #forest
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest.dds"
		environment = "environment_event_forest"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #mountains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	background = { #mountains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #steppe, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_steppe.dds"
		environment = "environment_travel_steppe_settlement"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}
	background = { #steppe, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/steppe.dds"
		environment = "environment_event_steppe"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}

	background = { #drylands (formerly desert)
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_drylands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/drylands.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #wetlands
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_wetlands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_wetlands.dds"
		environment = "environment_event_bp1_wetlands" 
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #jungle
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_jungle_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_jungle.dds"
		environment = "environment_event_bp1_jungle"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #plains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #plains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_plains.dds"
		environment = "environment_event_bp1_plains"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #hills, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #hills, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_hills.dds"
		environment = "environment_event_bp1_hills"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #sea
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_sea_province = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/fp1_ocean.dds"
		environment = "environment_event_fp1_ocean"
		ambience = "event:/DLC/FP1/SFX/Events/event_ocean_longship"
	}
	#Fallback
	background = {
		trigger = {
			OR = {
				scope:host = {
					government_has_flag = government_is_tribal
					faith = {
						religion = { is_in_family = rf_pagan }
					}
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/circuit.dds"
		#environment = "environment_event_garden"
		#ambience = "event:/DLC/FP1/SFX/Events/event_temple"
	}
	background = {
		texture = "gfx/interface/illustrations/event_scenes/circuit.dds"
		#environment = "environment_event_temple"
		#ambience = "event:/SFX/Events/Backgrounds/temple_generic"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = idle
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = idle
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = happiness
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}
	}
}
