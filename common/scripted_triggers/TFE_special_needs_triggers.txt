fallen_eagle_special_needs_trigger = {
	OR = {
		government_has_flag = government_is_imperial
		government_has_flag = government_is_city_state
		#government_has_flag = government_is_legion
		government_has_flag = government_is_autocratic
		government_has_flag = government_is_eranshar
		government_has_flag = government_is_gupta
		government_has_flag = government_is_imperial_cult
		government_has_flag = government_is_roman
		government_has_flag = government_is_muslim
		government_has_flag = government_is_caliphate
		government_has_flag = government_is_gana_sangha
	}
}

kick_from_court_validity_trigger = {
	is_busy_in_events_localised = yes
	NOR = {
		is_spouse_of = scope:actor
		is_concubine_of = scope:actor
		is_close_family_of = scope:actor
		has_council_position = councillor_court_chaplain
		has_trait = low_senator
		has_trait = senator
		has_trait = high_senator
		has_trait = training_senator
		is_diarch = yes
		# Marriage major partners of diarchs.
		## Female.
		AND = {
			is_married = yes
			is_female = yes
			matrilinear_marriage = yes
			any_consort = { is_diarch = yes }
		}
		## Male.
		AND = {
			is_married = yes
			is_male = yes
			patrilinear_marriage = yes
			any_consort = { is_diarch = yes }
		}
	}
}

courtier_allowed_to_leave_trigger = {
	save_temporary_scope_as = leaving_courtier
	NOR = {
		# Not blocked by script
		has_trait = low_senator
		has_trait = senator
		has_trait = high_senator
		has_trait = training_senator
		has_character_flag = blocked_from_leaving
		is_councillor_of = scope:liege
		is_consort_of = scope:liege
		scope:liege = {
			player_heir_position = {
				target = scope:leaving_courtier
				value <= 2 #Not 1st, 2nd or 3rd player heir (0,1,2)
			}
		}
		AND = {
			has_any_court_position = yes
			any_court_position_employer = { this = scope:liege }
		}
		has_relation_lover = scope:liege
		is_knight_of = scope:liege
		is_tax_collector_of = scope:liege
		any_relation = {
			type = ward
			OR = {
				this = scope:liege
				AND = {
					is_courtier_of = scope:liege
					OR = {
						NOT = { any_close_family_member = { this = scope:leaving_courtier } }
						any_close_family_member = { this = scope:liege }
					}
				}
			}
		}
		any_relation = {
			type = guardian
			OR = {
				this = scope:liege
				AND = {
					is_courtier_of = scope:liege
					OR = {
						NOT = { any_close_family_member = { this = scope:leaving_courtier } }
						any_close_family_member = { this = scope:liege }
					}
				}
			}
		}
		any_relation = {
			type = mentor
			OR = {
				this = scope:liege
				AND = {
					is_courtier_of = scope:liege
					OR = {
						NOT = { any_close_family_member = { this = scope:leaving_courtier } }
						any_close_family_member = { this = scope:liege }
					}
				}
			}
		}
		any_relation = {
			type = student
			OR = {
				this = scope:liege
				AND = {
					is_courtier_of = scope:liege
					OR = {
						NOT = { any_close_family_member = { this = scope:leaving_courtier } }
						any_close_family_member = { this = scope:liege }
					}
				}
			}
		}
		has_epidemic_disease_trigger = yes
		#Keep daughters/sons for marriages
		AND = {
			OR = {
				is_child_of = scope:liege
				is_grandchild_of = scope:liege
				is_great_grandchild_of = scope:liege
			}
			NOT = { has_trait = bastard }
			trigger_if = { #Daughters
				limit = { is_female = yes }
				scope:liege = {
					OR = {
						has_realm_law = male_only_law
						has_realm_law = male_preference_law
					}
				}
			}
			trigger_else = { #Sons
				scope:liege = {
					OR = {
						has_realm_law = female_only_law
						has_realm_law = female_preference_law
					}
				}
			}
		}
		#No children of liege can leave court while children
		AND = {
			OR = {
				is_child_of = scope:liege
				is_grandchild_of = scope:liege
				is_great_grandchild_of = scope:liege
			}
			is_adult = no
		}
		#Claimant won't leave while claim is pressed...
		scope:liege = { pressing_claim_of_character_trigger = { CHARACTER = scope:leaving_courtier } }
		#Would be leaving without a child or consort
		any_child_not_in_traveling_family_trigger = yes
		any_consort_not_in_traveling_family_trigger = yes
		#...Or while they have a promise for a claim getting pressed
		has_character_flag = courtier_staying_for_claim

		#...Or if they're involved in an ongoing event
		has_variable = stewardship_duty_1062_employer

		#...Or if someone is trying to elope with them
		any_targeting_scheme = {
			scheme_type = elope
		}
		
		#Non-dominant spouses don't wander off
		AND = {
			is_married = yes
			any_spouse = {
				OR = {
					AND = {
						exists = liege
						liege = scope:leaving_courtier.liege
					}
					AND = {
						exists = host
						exists = scope:leaving_courtier.host
						liege = scope:leaving_courtier.host
					}
					is_in_the_same_court_as = scope:leaving_courtier
				}
			}
			trigger_if = {
				limit = { is_female = yes }
				scope:liege = {
					OR = {
						has_realm_law = male_only_law
						has_realm_law = male_preference_law
					}
				}
			}
			trigger_else = {
				scope:liege = {
					OR = {
						has_realm_law = female_only_law
						has_realm_law = female_preference_law
					}
				}
			}
		}

		# Diarchs don't leave their court.
		is_diarch = yes
		is_designated_diarch = yes
		
		#Shieldmaidens stay till dismissed.
		has_trait = shieldmaiden
		
		# Children taught a lesson won't leave
		has_character_modifier = mellowed_spirit

		# Courtiers with sponsored inspirations won't leave on their own.
		AND = {
			exists = inspiration
			inspiration = {	exists = inspiration_sponsor }
		}
	}
}


believes_in_pilgrimage_trigger = {
	NOR = {
		# These Faiths historically shunned going on pilgrimages, saying they were a waste of time & money.
		faith = faith:waldensian
		faith = faith:paulician
		faith = faith:lollard
	}
	# Also we must have an actual holy site we can visit.
	faith = {	
		any_holy_site = {
			exists = this
		}
	}
}

can_be_knight_trigger = {
	is_hostage = no
	trigger_if = {
		limit = {
			$ARMY_OWNER$.culture = {
				has_cultural_parameter = minimum_prowess_for_knights
			}
		}
		prowess >= 12
	}
	can_be_warrior_trigger = { ARMY_OWNER = $ARMY_OWNER$ }
	trigger_if = {
		limit = {
			OR = {
				has_trait = devoted
				is_clergy = yes
			}
		}
		OR = {
			faith = { has_doctrine_parameter = clergy_can_fight }
			culture = { has_cultural_parameter = culture_clergy_can_fight }
			AND = {
				$ARMY_OWNER$.culture = {
					has_cultural_parameter = high_prowess_ignores_knight_restrictions
				}
				prowess >= 10
			}
		}
	}
	OR = {
		AND = {
			$ARMY_OWNER$.culture = {
				has_cultural_parameter = high_prowess_ignores_knight_restrictions
			}
			prowess >= 10
		}
		has_trait = order_member # Order Members will fight for their faith even if their faith says no
		NOT = {
			has_trait = blind
		}
	}
	trigger_if = {
		limit = {
			$ARMY_OWNER$ = {
				AND = {
					has_title = title:e_persia
					government_has_flag = government_is_eranshar
					NOT = {
						is_target_in_global_variable_list = {
							name = unavailable_unique_decisions
							target = flag:TFE_instate_dehqans
						}
					}
				}	
			}
		}
		is_lowborn = no
	}
	is_ai = yes
	
}

has_graphical_western_culture_group_trigger = {
	OR = {
		has_building_gfx = western_building_gfx
		has_building_gfx = baltic_building_gfx
		has_building_gfx = brythonic_building_gfx
		has_building_gfx = germanic_building_gfx
		has_building_gfx = goidelic_building_gfx
	}
}

valid_raid_target_trigger = {
	NOR = {
		has_raid_immunity_against = root
		is_allied_to = root
		has_truce = root
		target_is_vassal_or_below = root
		top_liege = root.top_liege
		AND = {
			exists = var:my_suzerain
			var:my_suzerain = root.top_liege
			var:my_suzerain = {
				OR = {
					is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
					is_target_in_variable_list = { name = permanent_tributaries target = prev }
				}
			}
		}
	}
}

TFE_is_loaded = { always = yes }