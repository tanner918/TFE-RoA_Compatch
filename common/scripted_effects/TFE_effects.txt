roman_office_event_two_effect = {
	if = {
		limit = {
			scope:title.tier = tier_kingdom
		}
		if = {
			limit = {
				AND =  {
					OR = { access_to_italian_senate = yes access_to_eastern_senate = yes }
					any_vassal = {
						AND = {
							is_landed = yes
							capital_county.kingdom = scope:title
						}
						highest_held_title_tier = tier_duchy
						trigger_if = {
							limit = {
								liege = { access_to_eastern_senate = yes }
							}
							AND = {
								
								global_variable_list_size = {
									name = aristocratic_senate_eastern
									value > 9
								}
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								global_variable_list_size = {
									name = populist_senate_eastern
									value > 9
								}
								has_character_flag = bribed_populists_eastern
							}
							AND = {
								
								global_variable_list_size = {
									name = traditionalist_senate_eastern
									value > 9
								}
								has_character_flag = bribed_traditionalist_eastern
							}
							AND = {
								
								has_character_flag = bribed_populists_eastern
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								has_character_flag = bribed_traditionalist_eastern
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								has_character_flag = bribed_populists_eastern
								has_character_flag = bribed_traditionalist_eastern
							}
						}
						trigger_if = {
							limit = {
								liege = { access_to_italian_senate = yes }
							}
							AND = {
								
								global_variable_list_size = {
									name = aristocratic_senate_italy
									value > 9
								}
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								global_variable_list_size = {
									name = populist_senate_italy
									value > 9
								}
								has_character_flag = bribed_populists_italy
							}
							AND = {
								
								global_variable_list_size = {
									name = traditionalist_senate_italy
									value > 9
								}
								has_character_flag = bribed_traditionalist_italy
							}
							AND = {
								
								has_character_flag = bribed_populists_italy
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								has_character_flag = bribed_traditionalist_italy
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								has_character_flag = bribed_populists_italy
								has_character_flag = bribed_traditionalist_italy
							}
						}
					}
				}
			}
			random_vassal = {
				limit = {
					AND = {
						is_landed = yes
						capital_county.kingdom = scope:title
					}
					highest_held_title_tier = tier_duchy
					trigger_if = {
						limit = {
							liege = { access_to_eastern_senate = yes }
						}
						AND = {
							
							global_variable_list_size = {
								name = aristocratic_senate_eastern
								value > 9
							}
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							global_variable_list_size = {
								name = populist_senate_eastern
								value > 9
							}
							has_character_flag = bribed_populists_eastern
						}
						AND = {
							
							global_variable_list_size = {
								name = traditionalist_senate_eastern
								value > 9
							}
							has_character_flag = bribed_traditionalist_eastern
						}
						AND = {
							
							has_character_flag = bribed_populists_eastern
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							has_character_flag = bribed_traditionalist_eastern
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							has_character_flag = bribed_populists_eastern
							has_character_flag = bribed_traditionalist_eastern
						}
					}
					trigger_if = {
						limit = {
							liege = { access_to_italian_senate = yes }
						}
						AND = {
							
							global_variable_list_size = {
								name = aristocratic_senate_italy
								value > 9
							}
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							global_variable_list_size = {
								name = populist_senate_italy
								value > 9
							}
							has_character_flag = bribed_populists_italy
						}
						AND = {
							
							global_variable_list_size = {
								name = traditionalist_senate_italy
								value > 9
							}
							has_character_flag = bribed_traditionalist_italy
						}
						AND = {
							
							has_character_flag = bribed_populists_italy
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							has_character_flag = bribed_traditionalist_italy
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							has_character_flag = bribed_populists_italy
							has_character_flag = bribed_traditionalist_italy
						}
					}
				}
				scope:title = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = PREV
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
		else = {
			ordered_vassal = {
				order_by = martial
				position = 0
				limit = {
					AND = {
						is_landed = yes
						capital_county.kingdom = scope:title
					}
					highest_held_title_tier = tier_duchy
				}
				scope:title = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = PREV
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
	}
	else_if = {
		limit = {
			scope:title.tier = tier_duchy
		}
		if = {
			limit = {
				AND =  {
					OR = { access_to_italian_senate = yes access_to_eastern_senate = yes }
					any_vassal_or_below= {
						AND = {
							is_landed = yes
							capital_county.duchy = scope:title
						}
						OR = {
							highest_held_title_tier = tier_county
							has_title = scope:title.kingdom
						}
						trigger_if = {
							limit = {
								liege = { access_to_eastern_senate = yes }
							}
							AND = {
								
								global_variable_list_size = {
									name = aristocratic_senate_eastern
									value > 9
								}
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								global_variable_list_size = {
									name = populist_senate_eastern
									value > 9
								}
								has_character_flag = bribed_populists_eastern
							}
							AND = {
								
								global_variable_list_size = {
									name = traditionalist_senate_eastern
									value > 9
								}
								has_character_flag = bribed_traditionalist_eastern
							}
							AND = {
								
								has_character_flag = bribed_populists_eastern
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								has_character_flag = bribed_traditionalist_eastern
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								has_character_flag = bribed_populists_eastern
								has_character_flag = bribed_traditionalist_eastern
							}
						}
						trigger_if = {
							limit = {
								liege = { access_to_italian_senate = yes }
							}
							AND = {
								
								global_variable_list_size = {
									name = aristocratic_senate_italy
									value > 9
								}
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								global_variable_list_size = {
									name = populist_senate_italy
									value > 9
								}
								has_character_flag = bribed_populists_italy
							}
							AND = {
								
								global_variable_list_size = {
									name = traditionalist_senate_italy
									value > 9
								}
								has_character_flag = bribed_traditionalist_italy
							}
							AND = {
								
								has_character_flag = bribed_populists_italy
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								has_character_flag = bribed_traditionalist_italy
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								has_character_flag = bribed_populists_italy
								has_character_flag = bribed_traditionalist_italy
							}
						}
					}
				}
			}
			random_vassal_or_below = {
				limit = {
					AND = {
						is_landed = yes
						capital_county.duchy = scope:title
					}
					OR = {
						highest_held_title_tier = tier_county
						has_title = scope:title.kingdom
					}
					trigger_if = {
						limit = {
							liege = { access_to_eastern_senate = yes }
						}
						AND = {
							
							global_variable_list_size = {
								name = aristocratic_senate_eastern
								value > 9
							}
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							global_variable_list_size = {
								name = populist_senate_eastern
								value > 9
							}
							has_character_flag = bribed_populists_eastern
						}
						AND = {
							
							global_variable_list_size = {
								name = traditionalist_senate_eastern
								value > 9
							}
							has_character_flag = bribed_traditionalist_eastern
						}
						AND = {
							
							has_character_flag = bribed_populists_eastern
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							has_character_flag = bribed_traditionalist_eastern
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							has_character_flag = bribed_populists_eastern
							has_character_flag = bribed_traditionalist_eastern
						}
					}
					trigger_if = {
						limit = {
							liege = { access_to_italian_senate = yes }
						}
						AND = {
							
							global_variable_list_size = {
								name = aristocratic_senate_italy
								value > 9
							}
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							global_variable_list_size = {
								name = populist_senate_italy
								value > 9
							}
							has_character_flag = bribed_populists_italy
						}
						AND = {
							
							global_variable_list_size = {
								name = traditionalist_senate_italy
								value > 9
							}
							has_character_flag = bribed_traditionalist_italy
						}
						AND = {
							
							has_character_flag = bribed_populists_italy
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							has_character_flag = bribed_traditionalist_italy
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							has_character_flag = bribed_populists_italy
							has_character_flag = bribed_traditionalist_italy
						}
					}
				}
				scope:title = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = PREV
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
		else = {
			ordered_vassal_or_below = {
				order_by = martial
				position = 0
				limit = {
					AND = {
						is_landed = yes
						capital_county.duchy = scope:title
					}
					OR = {
						highest_held_title_tier = tier_county
						has_title = scope:title.kingdom
					}
				}
				scope:title = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = PREV
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
	}
}

roman_office_event_three_effect = {
	if = {
		limit = {
			scope:title_old_office.tier = tier_kingdom
		}
		if = {
			limit = {
				AND =  {
					OR = { access_to_italian_senate = yes access_to_eastern_senate = yes }
					any_vassal = {
						AND = {
							is_landed = yes
							capital_county.kingdom = scope:title_old_office
						}
						highest_held_title_tier = tier_duchy
						trigger_if = {
							limit = {
								liege = { access_to_eastern_senate = yes }
							}
							AND = {
								
								global_variable_list_size = {
									name = aristocratic_senate_eastern
									value > 9
								}
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								global_variable_list_size = {
									name = populist_senate_eastern
									value > 9
								}
								has_character_flag = bribed_populists_eastern
							}
							AND = {
								
								global_variable_list_size = {
									name = traditionalist_senate_eastern
									value > 9
								}
								has_character_flag = bribed_traditionalist_eastern
							}
							AND = {
								
								has_character_flag = bribed_populists_eastern
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								has_character_flag = bribed_traditionalist_eastern
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								has_character_flag = bribed_populists_eastern
								has_character_flag = bribed_traditionalist_eastern
							}
						}
						trigger_if = {
							limit = {
								liege = { access_to_italian_senate = yes }
							}
							AND = {
								
								global_variable_list_size = {
									name = aristocratic_senate_italy
									value > 9
								}
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								global_variable_list_size = {
									name = populist_senate_italy
									value > 9
								}
								has_character_flag = bribed_populists_italy
							}
							AND = {
								
								global_variable_list_size = {
									name = traditionalist_senate_italy
									value > 9
								}
								has_character_flag = bribed_traditionalist_italy
							}
							AND = {
								
								has_character_flag = bribed_populists_italy
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								has_character_flag = bribed_traditionalist_italy
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								has_character_flag = bribed_populists_italy
								has_character_flag = bribed_traditionalist_italy
							}
						}
					}
				}
			}
			random_vassal = {
				limit = {
					AND = {
						is_landed = yes
						capital_county.kingdom = scope:title_old_office
					}
					highest_held_title_tier = tier_duchy
					trigger_if = {
						limit = {
							liege = { access_to_eastern_senate = yes }
						}
						AND = {
							
							global_variable_list_size = {
								name = aristocratic_senate_eastern
								value > 9
							}
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							global_variable_list_size = {
								name = populist_senate_eastern
								value > 9
							}
							has_character_flag = bribed_populists_eastern
						}
						AND = {
							
							global_variable_list_size = {
								name = traditionalist_senate_eastern
								value > 9
							}
							has_character_flag = bribed_traditionalist_eastern
						}
						AND = {
							
							has_character_flag = bribed_populists_eastern
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							has_character_flag = bribed_traditionalist_eastern
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							has_character_flag = bribed_populists_eastern
							has_character_flag = bribed_traditionalist_eastern
						}
					}
					trigger_if = {
						limit = {
							liege = { access_to_italian_senate = yes }
						}
						AND = {
							
							global_variable_list_size = {
								name = aristocratic_senate_italy
								value > 9
							}
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							global_variable_list_size = {
								name = populist_senate_italy
								value > 9
							}
							has_character_flag = bribed_populists_italy
						}
						AND = {
							
							global_variable_list_size = {
								name = traditionalist_senate_italy
								value > 9
							}
							has_character_flag = bribed_traditionalist_italy
						}
						AND = {
							
							has_character_flag = bribed_populists_italy
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							has_character_flag = bribed_traditionalist_italy
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							has_character_flag = bribed_populists_italy
							has_character_flag = bribed_traditionalist_italy
						}
					}
				}
				scope:title_old_office = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = PREV
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
		else = {
			ordered_vassal = {
				order_by = martial
				position = 0
				limit = {
					AND = {
						is_landed = yes
						capital_county.kingdom = scope:title_old_office
					}
					highest_held_title_tier = tier_duchy
				}
				scope:title_old_office = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = PREV
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
	}
	else_if = {
		limit = {
			scope:title_old_office.tier = tier_duchy
		}
		if = {
			limit = {
				AND =  {
					OR = { access_to_italian_senate = yes access_to_eastern_senate = yes }
					any_vassal_or_below = {
						AND = {
							is_landed = yes
							capital_county.duchy = scope:title_old_office
						}
						OR = {
							highest_held_title_tier = tier_county
							has_title = scope:title_old_office.kingdom
						}
						trigger_if = {
							limit = {
								liege = { access_to_eastern_senate = yes }
							}
							AND = {
								
								global_variable_list_size = {
									name = aristocratic_senate_eastern
									value > 9
								}
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								global_variable_list_size = {
									name = populist_senate_eastern
									value > 9
								}
								has_character_flag = bribed_populists_eastern
							}
							AND = {
								
								global_variable_list_size = {
									name = traditionalist_senate_eastern
									value > 9
								}
								has_character_flag = bribed_traditionalist_eastern
							}
							AND = {
								
								has_character_flag = bribed_populists_eastern
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								has_character_flag = bribed_traditionalist_eastern
								has_character_flag = bribed_aristocrats_eastern
							}
							AND = {
								
								has_character_flag = bribed_populists_eastern
								has_character_flag = bribed_traditionalist_eastern
							}
						}
						trigger_if = {
							limit = {
								liege = { access_to_italian_senate = yes }
							}
							AND = {
								
								global_variable_list_size = {
									name = aristocratic_senate_italy
									value > 9
								}
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								global_variable_list_size = {
									name = populist_senate_italy
									value > 9
								}
								has_character_flag = bribed_populists_italy
							}
							AND = {
								
								global_variable_list_size = {
									name = traditionalist_senate_italy
									value > 9
								}
								has_character_flag = bribed_traditionalist_italy
							}
							AND = {
								
								has_character_flag = bribed_populists_italy
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								has_character_flag = bribed_traditionalist_italy
								has_character_flag = bribed_aristocrats_italy
							}
							AND = {
								
								has_character_flag = bribed_populists_italy
								has_character_flag = bribed_traditionalist_italy
							}
						}
					}
				}
			}
			random_vassal_or_below = {
				limit = {
					AND = {
						is_landed = yes
						capital_county.duchy = scope:title_old_office
					}
					OR = {
						highest_held_title_tier = tier_county
						has_title = scope:title_old_office.kingdom
					}
					trigger_if = {
						limit = {
							liege = { access_to_eastern_senate = yes }
						}
						AND = {
							
							global_variable_list_size = {
								name = aristocratic_senate_eastern
								value > 9
							}
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							global_variable_list_size = {
								name = populist_senate_eastern
								value > 9
							}
							has_character_flag = bribed_populists_eastern
						}
						AND = {
							
							global_variable_list_size = {
								name = traditionalist_senate_eastern
								value > 9
							}
							has_character_flag = bribed_traditionalist_eastern
						}
						AND = {
							
							has_character_flag = bribed_populists_eastern
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							has_character_flag = bribed_traditionalist_eastern
							has_character_flag = bribed_aristocrats_eastern
						}
						AND = {
							
							has_character_flag = bribed_populists_eastern
							has_character_flag = bribed_traditionalist_eastern
						}
					}
					trigger_if = {
						limit = {
							liege = { access_to_italian_senate = yes }
						}
						AND = {
							
							global_variable_list_size = {
								name = aristocratic_senate_italy
								value > 9
							}
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							global_variable_list_size = {
								name = populist_senate_italy
								value > 9
							}
							has_character_flag = bribed_populists_italy
						}
						AND = {
							
							global_variable_list_size = {
								name = traditionalist_senate_italy
								value > 9
							}
							has_character_flag = bribed_traditionalist_italy
						}
						AND = {
							
							has_character_flag = bribed_populists_italy
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							has_character_flag = bribed_traditionalist_italy
							has_character_flag = bribed_aristocrats_italy
						}
						AND = {
							
							has_character_flag = bribed_populists_italy
							has_character_flag = bribed_traditionalist_italy
						}
					}
				}
				scope:title_old_office = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = PREV
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
		else = {
			ordered_vassal_or_below = {
				order_by = martial
				position = 0
				limit = {
					AND = {
						is_landed = yes
						capital_county.duchy = scope:title_old_office
					}
					OR = {
						highest_held_title_tier = tier_county
						has_title = scope:title_old_office.kingdom
					}
				}
				scope:title_old_office = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = PREV
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
	}
}

# A wild Attila appears!
spawn_attila_character_effect = {

	title:c_khortytsia.title_province = {
		save_scope_as = attila_birthplace
	}

	create_character = {
		name = "Attila"
		gender = male
		location = scope:attila_birthplace
		template = attila_character_template
		save_scope_as = attila
	}

	scope:attila = {
	# Make temporarily immune to disease
		add_character_flag = {
			flag = immune_to_disease
			years = 16
		}
		set_focus = education_martial
		#set_variable = {
		#	name = education_$SKILL$_variable
		#	value = 5
		#}
		copy_inheritable_appearance_from = character:990000
	}

}

find_title_for_donatist_spawn_effect = {
	if = { # The important thing is to not mess too much with players who can't resist
		limit = {
			title:c_gabes = {
				holder = { is_ai = yes }
				OR = {
					NOT = { exists = duchy.holder }
					duchy.holder = { is_ai = yes }
				}
			}
		}
		title:c_gabes = {
			save_scope_as = donatist_county
		}
	}
	else = {
		title:k_africae = {
			random_in_de_jure_hierarchy = {
				continue = { tier > tier_county }
				limit = {
					tier = tier_county
					holder = { is_ai = yes } # Let's not murder players
					NOT = { this = title:c_gabes }
					save_temporary_scope_as = potential_donatist_county
					# If someone holds k_africae, put the Donatists in their realm
					trigger_if = {
						limit = { exists = title:k_africae.holder }
						title:k_africae.holder = {
							OR = {
								this = scope:potential_donatist_county.holder
								any_sub_realm_county = {
									this = scope:potential_donatist_county
								}
							}
						}
					}
					# Either this should be the holder's only title, or it should NOT be their capital
					trigger_if = {
						limit = {
							holder = {
								any_sub_realm_county = { count > 1 }
							}
						}
						NOT = {
							this = holder.capital_county
						}
					}
				}
				weight = {
					base = 1
					# Prefer already Donatist counties
					modifier = {
						add = 10
						faith = faith:donatism
					}
					# Massively prefer to avoid a player-held Duchies if possible
					modifier = {
						factor = 0.01
						exists = duchy.holder
						duchy.holder = { is_ai = no }
					}
				}
				save_scope_as = donatist_county
			}
		}
	}

	if = { # Discard stuff from here on out
		limit = { NOT = { exists = scope:donatist_county } }
		debug_log = "No Donatist title found, Donatists won't spawn"
	}
	# Convert the County and warn relevant people
	else = {
		set_global_variable = {
			name = spawned_donatists
			value = yes
		}
		scope:donatist_county = {
			set_county_faith = faith:donatism
		}
		scope:donatist_county.holder = {
			if = {
				limit = {
					is_ai = no
				}
				trigger_event = donatist_revolt.1001
			}
			every_liege_or_above = {
				limit = { is_ai = no }
				trigger_event = donatist_revolt.1001
			}
		}
		trigger_event = { # Convert the province or prepare
			id = donatist_revolt.0002
			days = { 400 1000 }
		}
	}
}

create_donatists_effect = {
	create_character = {
		name = "Axido"
		gender = male
		template = donatist_leader_character_template
		location = scope:donatist_county.title_province
		save_scope_as = donatist_leader
	}
	faith:donatism = {
		change_fervor = {
			value = 50
			desc = fervor_gain_donatists
		}
	}
	scope:donatist_leader = {
		add_prestige = 500
		add_piety = 500
		add_pressed_claim = title:k_africae
		add_pressed_claim = title:d_tunis
		add_pressed_claim = title:d_kairouan
		add_character_modifier = {
			modifier = donatist_leader_modifier
		}
		add_character_flag = {
			flag = immune_to_disease
			years = 15
		}
		create_artifact_donatistclub_effect = { OWNER = scope:donatist_leader }
    }
	scope:story = {
		set_variable = {
			name = donatist_leader
			value = scope:donatist_leader
		}
		set_variable = {
			name = donatist_county
			value = scope:donatist_county
		}
	}

	donatists_find_target_titles_effect = yes

	find_donatist_titles_and_assign_to_donatist_leader_effect = yes

	scope:donatist_county.holder = {
		set_global_variable = {
			name = donatists_waiting_for_player_responses
			value = 0
			years = 1 # Clear out eventually, just in case
		}
		set_global_variable = {
			name = donatists_player_responses_received
			value = 0
			years = 1 # Clear out eventually, just in case
		}
		if = {
			limit = { is_ai = no }
			change_global_variable = {
				name = donatists_waiting_for_player_responses
				add = 1
			}
			trigger_event = donatist_revolt.1002
		}
		every_liege_or_above = {
			limit = { is_ai = no }
			change_global_variable = {
				name = donatists_waiting_for_player_responses
				add = 1
			}
			trigger_event = donatist_revolt.1002
		}
		if = {
			limit = {
				global_var:donatists_waiting_for_player_responses = 0
			}
			remove_global_variable = donatists_waiting_for_player_responses
			remove_global_variable = donatists_player_responses_received
			donatists_go_to_war_effect = yes
		}
		else = {
			trigger_event = {
				id = donatist_revolt.0004
				days = 5
			}
		}
	}
}

donatists_find_target_titles_effect = {
	if = {
		limit = { exists = title:k_africae.holder }
		title:k_africae = {
			save_scope_as = africae_target_title
			holder = {
				save_scope_as = first_target
			}
		}
		if = {
			limit = {
				NOT = { scope:donatist_county.holder.top_liege = title:k_africae.holder.top_liege }
				scope:donatist_county.holder.top_liege = {
					any_sub_realm_county = {
						NOT = { this = scope:donatist_county }
						kingdom = title:k_africae
					}
				}
			}
			scope:donatist_county.holder.top_liege = {
				save_scope_as = second_target
			}
		}
	}
	else_if = {
		limit = { exists = title:d_tunis.holder }
		title:d_tunis = {
			save_scope_as = africae_target_title
			holder = {
				save_scope_as = first_target
			}
		}
		if = {
			limit = {
				NOT = { scope:donatist_county.holder.top_liege = title:d_tunis.holder.top_liege }
				scope:donatist_county.holder.top_liege = {
					any_sub_realm_county = {
						NOT = { this = scope:donatist_county }
						kingdom = title:k_africae
					}
				}
			}
			scope:donatist_county.holder.top_liege = {
				save_scope_as = second_target
			}
		}
	}
	else_if = {
		limit = { exists = title:d_kairouan.holder }
		title:d_kairouan = {
			save_scope_as = africae_target_title
			holder = {
				save_scope_as = first_target
			}
		}
		if = {
			limit = {
				NOT = { scope:donatist_county.holder.top_liege = title:d_kairouan.holder.top_liege }
				scope:donatist_county.holder.top_liege = {
					any_sub_realm_county = {
						NOT = { this = scope:donatist_county }
						kingdom = title:k_africae
					}
				}
			}
			scope:donatist_county.holder.top_liege = {
				save_scope_as = second_target
			}
		}
	}
	else = {
		ordered_independent_ruler = {
			limit = { highest_held_title_tier > tier_county }
			order_by = titles_held_in_k_africae
			position = 0
			save_scope_as = first_target
		}
	}
}

find_donatist_titles_and_assign_to_donatist_leader_effect = {
	every_county = {
		limit = {
			tier = tier_county
			duchy = { this = title:d_kairouan }
			faith = faith:donatism
		}
		save_temporary_scope_as = current_county
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:donatist_leader
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
	
}

donatists_go_to_war_effect = {
	scope:donatist_leader = {
		donatists_become_independent_effect = yes
		donatists_declare_war_for_target_title_effect = yes
		spawn_first_donatist_troops_effect = yes
	}
}

donatists_become_independent_effect = {
	hidden_effect = {
		if = {
			limit = { scope:donatist_leader = { is_imprisoned = yes } }
			scope:donatist_leader = { release_from_prison = yes }
		}
	}
	create_title_and_vassal_change = {
		type = independency
		save_scope_as = going_independent
		add_claim_on_loss = no
	}
	scope:donatist_leader = {
		becomes_independent = {
			change = scope:going_independent
		}
	}

	resolve_title_and_vassal_change = scope:going_independent
}

donatists_declare_war_for_target_title_effect = {
	save_scope_as = war_leader
	if = {
		limit = { exists = scope:first_target }
		start_war = {
			cb = claim_cb_donatist
			target = scope:first_target
			claimant = scope:war_leader
			target_title = scope:africae_target_title
		}

		if = {
			limit = {
				exists = scope:second_target
				NOT = { exists = global_var:donatists_do_not_attack_second_target }
			}
			start_war = {
				cb = claim_cb_donatist
				target = scope:second_target
				claimant = scope:war_leader
				target_title = scope:africae_target_title
			}
		}
	}
	if = {
		limit = { exists = global_var:donatists_do_not_attack_second_target }
		remove_global_variable = donatists_do_not_attack_second_target
	}
	else = {
		debug_log = "Failed to find a valid war target for the Donatists!"
	}
}


spawn_first_donatist_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = event_troop_default_name
		levies = {
			value = 4000
		}
		location = scope:donatist_leader.capital_province
	}
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = event_troop_default_name
		levies = {
			value = 4000
		}
		location = scope:donatist_leader.capital_province
	}
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = event_troop_default_name
		levies = {
			value = 4000
		}
		location = scope:donatist_leader.capital_province
	}
}

favour_the_countryside_basques_decision_fundamentalist_path_scripted_effect = {
	faith:basque_pagan = {
		# First, we remove Hellenic Syncretism & replace it with Warmonger.
		remove_doctrine = tenet_hellenic_syncretism
		add_doctrine = tenet_warmonger
		# Then, we switch on over from Pluralist to Fundamentalist.
		## We disguise some of these changes for neatness, as there's a lot to process.
		hidden_effect = { remove_doctrine = doctrine_pluralism_pluralistic }
		add_doctrine = doctrine_pluralism_fundamentalist
		# No HoF becomes a spiritual HoF, so that you can make use of your Warmonger GHWs.
		hidden_effect = { remove_doctrine = doctrine_no_head }
		add_doctrine = doctrine_spiritual_head
		# Plus, set the faith's fervour to a middling/low level, since you've messed with it.
		change_fervor = {
			value = -50
			desc = fervour_loss_temporal_meddling
		}
	}
	# Create the new HoF.
	hidden_effect = {
		scope:religious_leader = {
			set_up_dynamic_spiritual_hof_title_effect = { CREATOR = scope:religious_leader }
		}
	}
	custom_tooltip = favour_the_countryside_basques_decision.tt.spiritual_hof_acquired
	# We get a small modifier for clergy approval, since they're a bit peeved at the tenet-messing.
	add_character_modifier = fp2_friend_of_the_old_ways_modifier
}

favour_the_countryside_basques_decision_righteous_path_scripted_effect = {
	faith:basque_pagan = {
		# First, we remove Hellenic Syncretism & replace it with Sanctity of Nature.
		remove_doctrine = tenet_hellenic_syncretism
		add_doctrine = tenet_sanctity_of_nature
		# Then, we switch on over from Pluralist to Righteous.
		## We disguise some of these changes for neatness, as there's a lot to process.
		hidden_effect = { remove_doctrine = doctrine_pluralism_pluralistic }
		add_doctrine = doctrine_pluralism_righteous
		# No HoF becomes you as the temporal HoF, as you're focusing more on the non-Christian parts of the faith.
		hidden_effect = {
			remove_doctrine = doctrine_no_head
			remove_doctrine = doctrine_theocracy_temporal
			remove_doctrine = doctrine_clerical_succession_spiritual_appointment
		}
		add_doctrine = doctrine_temporal_head
		add_doctrine = doctrine_theocracy_lay_clergy
		add_doctrine = doctrine_clerical_succession_temporal_fixed_appointment
		# Plus, set the faith's fervour to a middling/low level, since you've messed with it.
		change_fervor = {
			value = -50
			desc = fervour_loss_temporal_meddling
		}
	}
	# Create the new HoF.
	hidden_effect = {
		scope:religious_leader = {
			set_up_dynamic_temporal_hof_title_effect = { NEW_HOLDER = scope:religious_leader }
		}
	}
	custom_tooltip = favour_the_countryside_basques_decision.tt.temporal_hof_acquired
	# We get a small modifier for clergy approval, since they're a bit peeved at the tenet-messing.
	add_character_modifier = fp2_friend_of_the_old_ways_modifier
}

favour_the_countryside_basques_decision_pluralist_path_scripted_effect = {
	faith:basque_pagan = {
		# First, we mostly only need to remove Hellenic Syncretism & replace it with Christian Syncretism.
		remove_doctrine = tenet_hellenic_syncretism
		add_doctrine = tenet_christian_syncretism
		# Then set the faith's fervour to a middling/low level, since you've messed with it.
		change_fervor = {
			value = -50
			desc = fervour_loss_temporal_meddling
		}
	}
	# Bonus opinion with every neighbouring Islamic ruler & their vassals, who appreciate the direction you're going in.
	## Compile a list.
	top_liege = {
		if = {
			limit = { religion = religion:christianity_religion }
			add_to_list = pleased_rulers
		}
		every_vassal_or_below = {
			limit = { religion = religion:christianity_religion }
			add_to_list = pleased_rulers
		}
	}
	every_neighboring_and_across_water_top_liege_realm_owner = {
		if = {
			limit = { religion = religion:christianity_religion }
			add_to_list = pleased_rulers
		}
		every_vassal_or_below = {
			limit = { religion = religion:christianity_religion }
			add_to_list = pleased_rulers
		}
	}
	## And apply some opinions.
	every_in_list = {
		list = pleased_rulers
		custom = favour_the_countryside_basques_decision.tt.all_neighbouring_christian_rulers
		add_opinion = {
			target = scope:religious_leader
			modifier = pleased_opinion
			opinion = 30
		}
	}
	# We get a small modifier for clergy approval, since they're a bit peeved at the tenet-messing.
	add_character_modifier = fp2_friend_of_the_old_ways_modifier
}

TFE_gladiator_completed_log_entry_effect = {
	scope:activity = {
		add_activity_log_entry = {
			key = TFE_gladiator_completed_log_entry
			tags = { completed }
			# this line below adds the entry to the Effects section of the conclusion UI
			show_in_conclusion = yes
			character = root
			custom_tooltip = TFE_finished_gladiator
			show_as_tooltip = {
				every_attending_character = {
					limit = { NOT = { this = scope:host } }
					custom = EVERY_ACTIVITY_PARTICIPANT_EFFECT
					custom_tooltip = TFE_finished_gladiator
				}
			}
		}
	}
}

TFE_chariot_completed_log_entry_effect = {
	scope:activity = {
		add_activity_log_entry = {
			key = TFE_chariot_completed_log_entry
			tags = { completed }
			# this line below adds the entry to the Effects section of the conclusion UI
			show_in_conclusion = yes
			character = root
			custom_tooltip = TFE_finished_chariot
			show_as_tooltip = {
				every_attending_character = {
					limit = { NOT = { this = scope:host } }
					custom = EVERY_ACTIVITY_PARTICIPANT_EFFECT
					custom_tooltip = TFE_finished_chariot
				}
			}
		}
	}
}

populate_TFE_charioteers_effect = {
	create_character = {
		template = TFE_pool_repopulate_prowess
		trait = blue_charioteer
		employer = scope:TFE_chariot_ruler_current
		culture = scope:TFE_chariot_ruler_current.culture
		faith = scope:TFE_chariot_ruler_current.faith
		gender_female_chance = {
			value = 0
			if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
				add = 0
			}
			else_if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
				add = 100
			}
			else = {
				add = 50
			}
		}
		save_temporary_scope_as = charioteer_blue_1
	}
	create_character = {
		template = TFE_pool_repopulate_intrigue
		trait = blue_charioteer
		employer = scope:TFE_chariot_ruler_current
		culture = scope:TFE_chariot_ruler_current.culture
		faith = scope:TFE_chariot_ruler_current.faith
		gender_female_chance = {
			value = 0
			if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
				add = 0
			}
			else_if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
				add = 100
			}
			else = {
				add = 50
			}
		}
		save_temporary_scope_as = charioteer_blue_2
	}
	create_character = {
		template = TFE_pool_repopulate_stewardship
		trait = blue_charioteer
		employer = scope:TFE_chariot_ruler_current
		culture = scope:TFE_chariot_ruler_current.culture
		faith = scope:TFE_chariot_ruler_current.faith
		gender_female_chance = {
			value = 0
			if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
				add = 0
			}
			else_if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
				add = 100
			}
			else = {
				add = 50
			}
		}
		save_temporary_scope_as = charioteer_blue_3
	}
	create_character = {
		template = TFE_pool_repopulate_prowess
		trait = green_charioteer
		employer = scope:TFE_chariot_ruler_current
		culture = scope:TFE_chariot_ruler_current.culture
		faith = scope:TFE_chariot_ruler_current.faith
		gender_female_chance = {
			value = 0
			if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
				add = 0
			}
			else_if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
				add = 100
			}
			else = {
				add = 50
			}
		}
		save_temporary_scope_as = charioteer_green_1
	}
	create_character = {
		template = TFE_pool_repopulate_intrigue
		trait = green_charioteer
		employer = scope:TFE_chariot_ruler_current
		culture = scope:TFE_chariot_ruler_current.culture
		faith = scope:TFE_chariot_ruler_current.faith
		gender_female_chance = {
			value = 0
			if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
				add = 0
			}
			else_if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
				add = 100
			}
			else = {
				add = 50
			}
		}
		save_temporary_scope_as = charioteer_green_2
	}
	create_character = {
		template = TFE_pool_repopulate_stewardship
		trait = green_charioteer
		employer = scope:TFE_chariot_ruler_current
		culture = scope:TFE_chariot_ruler_current.culture
		faith = scope:TFE_chariot_ruler_current.faith
		gender_female_chance = {
			value = 0
			if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
				add = 0
			}
			else_if = {
				limit = { scope:TFE_chariot_ruler_current.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
				add = 100
			}
			else = {
				add = 50
			}
		}
		save_temporary_scope_as = charioteer_green_3
	}
	scope:TFE_chariot_title_current = {
		add_to_variable_list = {
			name = blue_team
			target = scope:charioteer_blue_1
		}
	}
	scope:TFE_chariot_title_current = {
		add_to_variable_list = {
			name = blue_team
			target = scope:charioteer_blue_2
		}
	}
	scope:TFE_chariot_title_current = {
		add_to_variable_list = {
			name = blue_team
			target = scope:charioteer_blue_3
		}
	}
	scope:TFE_chariot_title_current = {
		add_to_variable_list = {
			name = green_team
			target = scope:charioteer_green_1
		}
	}
	scope:TFE_chariot_title_current = {
		add_to_variable_list = {
			name = green_team
			target = scope:charioteer_green_2
		}
	}
	scope:TFE_chariot_title_current = {
		add_to_variable_list = {
			name = green_team
			target = scope:charioteer_green_3
		}
	}
	#Done in create character
	#scope:TFE_chariot_ruler_current = {
	#	add_courtier = scope:charioteer_blue_1
	#	add_courtier = scope:charioteer_blue_2
	#	add_courtier = scope:charioteer_blue_3
	#	add_courtier = scope:charioteer_green_1
	#	add_courtier = scope:charioteer_green_2
	#	add_courtier = scope:charioteer_green_3
	#}
	scope:TFE_chariot_title_current = {
		every_in_list = {
			variable = blue_team
			add_character_flag = {
				flag = blocked_from_leaving
				years = 100
			}
		}
	}
	scope:TFE_chariot_title_current = {
		every_in_list = {
			variable = green_team
			add_character_flag = {
				flag = blocked_from_leaving
				years = 100
			}
		}
	}
}

remove_TFE_charioteers_traits_effect = {
	scope:TFE_chariot_title_remove = {
		every_in_list = {
			variable = blue_team
			remove_trait = blue_charioteer
			remove_character_flag = blocked_from_leaving
		}
		every_in_list = {
			variable = green_team
			remove_trait = green_charioteer
			remove_character_flag = blocked_from_leaving
		}
	}
}

remove_TFE_charioteers_list_effect = {
	scope:TFE_chariot_title_remove = {
		every_in_list = {
			variable = blue_team
			remove_list_variable = {
				name = blue_team
				target = THIS
			}
		}
		every_in_list = {
			variable = green_team
			remove_list_variable = {
				name = green_team
				target = THIS
			}
		}
	}
}

add_TFE_green_charioteer_effect = {
	random_list = {
		33 = {
			create_character = {
				template = TFE_pool_repopulate_prowess
					trait = green_charioteer
					employer = scope:TFE_chariot_title_renew.holder
					culture = scope:TFE_chariot_title_renew.holder.culture
					faith = scope:TFE_chariot_title_renew.holder.faith
					gender_female_chance = {
						value = 0	
						if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
								add = 0
						}
						else_if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
							add = 100
						}
						else = {
							add = 50
						}
					}
					save_scope_as = new_TFE_charioteer
			}
			scope:TFE_chariot_title_renew = {
				add_to_variable_list = {
					name = green_team
					target = scope:new_TFE_charioteer
				}
			}
		}
		33 = {
			create_character = {
				template = TFE_pool_repopulate_intrigue
					trait = green_charioteer
					employer = scope:TFE_chariot_title_renew.holder
					culture = scope:TFE_chariot_title_renew.holder.culture
					faith = scope:TFE_chariot_title_renew.holder.faith
					gender_female_chance = {
						value = 0	
						if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
								add = 0
						}
						else_if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
							add = 100
						}
						else = {
							add = 50
						}
					}
					save_scope_as = new_TFE_charioteer
			}
			scope:TFE_chariot_title_renew = {
				add_to_variable_list = {
					name = green_team
					target = scope:new_TFE_charioteer
				}
			}
		}
		33 = {
			create_character = {
				template = TFE_pool_repopulate_stewardship
					trait = green_charioteer
					employer = scope:TFE_chariot_title_renew.holder
					culture = scope:TFE_chariot_title_renew.holder.culture
					faith = scope:TFE_chariot_title_renew.holder.faith
					gender_female_chance = {
						value = 0	
						if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
								add = 0
						}
						else_if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
							add = 100
						}
						else = {
							add = 50
						}
					}
					save_scope_as = new_TFE_charioteer
			}
			scope:TFE_chariot_title_renew = {
				add_to_variable_list = {
					name = green_team
					target = scope:new_TFE_charioteer
				}
			}
		}
	}
}

add_TFE_blue_charioteer_effect = {
	random_list = {
		33 = {
			create_character = {
				template = TFE_pool_repopulate_prowess
					trait = blue_charioteer
					employer = scope:TFE_chariot_title_renew.holder
					culture = scope:TFE_chariot_title_renew.holder.culture
					faith = scope:TFE_chariot_title_renew.holder.faith
					gender_female_chance = {
						value = 0	
						if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
								add = 0
						}
						else_if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
							add = 100
						}
						else = {
							add = 50
						}
					}
					save_scope_as = new_TFE_charioteer
			}
			scope:TFE_chariot_title_renew = {
				add_to_variable_list = {
					name = blue_team
					target = scope:new_TFE_charioteer
				}
			}
		}
		33 = {
			create_character = {
				template = TFE_pool_repopulate_intrigue
					trait = blue_charioteer
					employer = scope:TFE_chariot_title_renew.holder
					culture = scope:TFE_chariot_title_renew.holder.culture
					faith = scope:TFE_chariot_title_renew.holder.faith
					gender_female_chance = {
						value = 0	
						if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
								add = 0
						}
						else_if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
							add = 100
						}
						else = {
							add = 50
						}
					}
					save_scope_as = new_TFE_charioteer
			}
			scope:TFE_chariot_title_renew = {
				add_to_variable_list = {
					name = blue_team
					target = scope:new_TFE_charioteer
				}
			}
		}
		33 = {
			create_character = {
				template = TFE_pool_repopulate_stewardship
					trait = blue_charioteer
					employer = scope:TFE_chariot_title_renew.holder
					culture = scope:TFE_chariot_title_renew.holder.culture
					faith = scope:TFE_chariot_title_renew.holder.faith
					gender_female_chance = {
						value = 0	
						if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
								add = 0
						}
						else_if = {
							limit = { scope:TFE_chariot_title_renew.holder.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
							add = 100
						}
						else = {
							add = 50
						}
					}
					save_scope_as = new_TFE_charioteer
			}
			scope:TFE_chariot_title_renew = {
				add_to_variable_list = {
					name = blue_team
					target = scope:new_TFE_charioteer
				}
			}
		}
	}
}

#Results counter -- Add 1 for Green win, subtract 1 for Blue win

#Win needs to be inside of a scope:activity

TFE_blue_win_effect = {
	if = {
		limit = { exists = var:result_counter }
		change_variable = {
			name = result_counter
			add = -1
		}
	}
	else = {
		set_variable = {
			name = result_counter
			value = -1
		}
	}
}

TFE_green_win_effect = {
	if = {
		limit = { exists = var:result_counter }
		change_variable = {
			name = result_counter
			add = 1
		}
	}
	else = {
		set_variable = {
			name = result_counter
			value = 1
		}
	}
}

TFE_chariot_race_prowess = {
	scope:host.primary_title = {
		random_in_list = {
			variable = green_team
			save_scope_as = green_1
		}
	}
	scope:host.primary_title = {
		random_in_list = {
			variable = blue_team
			save_scope_as = blue_1
		}
	}
	scope:green_1 = {
		duel = {
			skill = prowess
			target = scope:blue_1
			50 = {
				compare_modifier = {
					 value = scope:duel_value
					 multiplier = 3.5
					 min = -49
				}
				set_local_variable = { name = win_team value = flag:green }
				scope:activity = {
					if = {
						limit = { exists = var:result_counter }
						change_variable = {
							name = result_counter
							add = 1
						}
					}
					else = {
						set_variable = {
							name = result_counter
							value = 1
						}
					}
				}
				scope:green_1 = { save_scope_as = winner }
				scope:blue_1 = { save_scope_as = loser }
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				set_local_variable = { name = win_team value = flag:blue }
				scope:activity = {
					if = {
						limit = { exists = var:result_counter }
						change_variable = {
							name = result_counter
							add = -1
						}
					}
					else = {
						set_variable = {
							name = result_counter
							value = -1
						}
					}
				}
				scope:green_1 = { save_scope_as = loser }
				scope:blue_1 = { save_scope_as = winner }
			}
		}
	}
}

TFE_chariot_race_intrigue = {
	scope:host.primary_title = {
		random_in_list = {
			variable = green_team
			save_scope_as = green_1
		}
	}
	scope:host.primary_title = {
		random_in_list = {
			variable = blue_team
			save_scope_as = blue_1
		}
	}
	scope:green_1 = {
		duel = {
			skill = intrigue
			target = scope:blue_1
			50 = {
				compare_modifier = {
					 value = scope:duel_value
					 multiplier = 3.5
					 min = -49
				}
				set_local_variable = { name = win_team value = flag:green }
				scope:activity = {
					if = {
						limit = { exists = var:result_counter }
						change_variable = {
							name = result_counter
							add = 1
						}
					}
					else = {
						set_variable = {
							name = result_counter
							value = 1
						}
					}
				}
				scope:green_1 = { save_scope_as = winner }
				scope:blue_1 = { save_scope_as = loser }
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				set_local_variable = { name = win_team value = flag:blue }
				scope:activity = {
					if = {
						limit = { exists = var:result_counter }
						change_variable = {
							name = result_counter
							add = -1
						}
					}
					else = {
						set_variable = {
							name = result_counter
							value = -1
						}
					}
				}
				scope:green_1 = { save_scope_as = loser }
				scope:blue_1 = { save_scope_as = winner }
			}
		}
	}
}

TFE_chariot_race_stewardship = {
	scope:host.primary_title = {
		random_in_list = {
			variable = green_team
			save_scope_as = green_1
		}
	}
	scope:host.primary_title = {
		random_in_list = {
			variable = blue_team
			save_scope_as = blue_1
		}
	}
	scope:green_1 = {
		duel = {
			skill = stewardship
			target = scope:blue_1
			50 = {
				compare_modifier = {
					 value = scope:duel_value
					 multiplier = 3.5
					 min = -49
				}
				set_local_variable = { name = win_team value = flag:green }
				scope:activity = {
					if = {
						limit = { exists = var:result_counter }
						change_variable = {
							name = result_counter
							add = 1
						}
					}
					else = {
						set_variable = {
							name = result_counter
							value = 1
						}
					}
				}
				scope:green_1 = { save_scope_as = winner }
				scope:blue_1 = { save_scope_as = loser }
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				set_local_variable = { name = win_team value = flag:blue }
				scope:activity = {
					if = {
						limit = { exists = var:result_counter }
						change_variable = {
							name = result_counter
							add = -1
						}
					}
					else = {
						set_variable = {
							name = result_counter
							value = -1
						}
					}
				}
				scope:green_1 = { save_scope_as = loser }
				scope:blue_1 = { save_scope_as = winner }
			}
		}
	}
}

#Use scope:person define for these effects

TFE_favor_the_blues_effect = {
	scope:host.primary_title = {
		every_in_list = {
			variable = green_team
			add_opinion = {
				modifier = disappointed_opinion
				target = scope:person
				opinion = -5
			}
		}
	}
	scope:host.primary_title = {
		every_in_list = {
			variable = blue_team
			add_opinion = {
				modifier = grateful_opinion
				target = scope:person
				opinion = 5
			}
		}
	}
}

TFE_favor_the_greens_effect = {
	scope:host.primary_title = {
		every_in_list = {
			variable = blue_team
			add_opinion = {
				modifier = disappointed_opinion
				target = scope:person
				opinion = -5
			}
		}
	}
	scope:host.primary_title = {
		every_in_list = {
			variable = green_team
			add_opinion = {
				modifier = grateful_opinion
				target = scope:person
				opinion = 5
			}
		}
	}
}

#Host only stuff
#Results counter -- Add 1 for Green win, subtract 1 for Blue win

TFE_favor_the_blues_unfair_effect = {
	scope:host.primary_title = {
		every_in_list = {
			variable = green_team
			add_opinion = {
				modifier = angry_opinion
				target = scope:host
				opinion = -15
			}
		}
	}
	scope:host.primary_title = {
		every_in_list = {
			variable = blue_team
			add_opinion = {
				modifier = grateful_opinion
				target = scope:host
				opinion = 10
			}
		}
	}
	scope:activity = {
		if = {
			limit = { exists = var:green_anger }
			change_variable = {
				name = green_anger
				add = 1
			}
		}
		else = {
			set_variable = {
				name = green_anger
				value = 1
			}
		}
	}
	scope:activity = {
		if = {
			limit = { exists = var:result_counter }
			change_variable = {
				name = result_counter
				add = -20
			}
		}
		else = {
			set_variable = {
				name = result_counter
				value = -20
			}
		}
	}
}

TFE_favor_the_greens_unfair_effect = {
	scope:host.primary_title = {
		every_in_list = {
			variable = blue_team
			add_opinion = {
				modifier = angry_opinion
				target = scope:host
				opinion = -15
			}
		}
	}
	scope:host.primary_title = {
		every_in_list = {
			variable = green_team
			add_opinion = {
				modifier = grateful_opinion
				target = scope:host
				opinion = 10
			}
		}
	}
	scope:activity = {
		if = {
			limit = { exists = var:blue_anger }
			change_variable = {
				name = blue_anger
				add = 1
			}
		}
		else = {
			set_variable = {
				name = blue_anger
				value = 1
			}
		}
	}
	scope:activity = {
		if = {
			limit = { exists = var:result_counter }
			change_variable = {
				name = result_counter
				add = 20
			}
		}
		else = {
			set_variable = {
				name = result_counter
				value = 20
			}
		}
	}
}

TFE_upset_chariots_effect = {
	scope:host.primary_title = {
		every_in_list = {
			variable = blue_team
			add_opinion = {
				modifier = angry_opinion
				target = scope:host
				opinion = -15
			}
		}
	}
	scope:host.primary_title = {
		every_in_list = {
			variable = green_team
			add_opinion = {
				modifier = angry_opinion
				target = scope:host
				opinion = -15
			}
		}
	}
	scope:activity = {
		if = {
			limit = { exists = var:green_anger }
			change_variable = {
				name = green_anger
				add = 1
			}
		}
		else = {
			set_variable = {
				name = green_anger
				value = 1
			}
		}
	}
	scope:activity = {
		if = {
			limit = { exists = var:blue_anger }
			change_variable = {
				name = blue_anger
				add = 1
			}
		}
		else = {
			set_variable = {
				name = blue_anger
				value = 1
			}
		}
	}
}

TFE_change_win_to_green_effect = {
	scope:activity = {
		if = {
			limit = { exists = var:result_counter }
			change_variable = {
				name = result_counter
				add = 2
			}
		}
		else = {
			set_variable = {
				name = result_counter
				value = 2
			}
		}
	}
}

TFE_change_win_to_blue_effect = {
	scope:activity = {
		if = {
			limit = { exists = var:result_counter }
			change_variable = {
				name = result_counter
				add = -2
			}
		}
		else = {
			set_variable = {
				name = result_counter
				value = -2
			}
		}
	}
}

TFE_reset_blue_win_effect = {
	scope:activity = {
		if = {
			limit = { exists = var:result_counter }
			change_variable = {
				name = result_counter
				add = 1
			}
		}
		else = {
			set_variable = {
				name = result_counter
				value = 1
			}
		}
	}
}

TFE_reset_green_win_effect = {
	scope:activity = {
		if = {
			limit = { exists = var:result_counter }
			change_variable = {
				name = result_counter
				add = -1
			}
		}
		else = {
			set_variable = {
				name = result_counter
				value = -1
			}
		}
	}
}

TFE_spawn_china_raiding_party_effect = {
	if = {
		limit = { scope:size >= 2500 }
		spawn_army = {
			name = "Steppe Raiders"
			levies = 1000
			men_at_arms = {
				type = bowmen
				stacks = 4
			}
			men_at_arms = {
				type = light_horsemen
				stacks = 4
			}
			men_at_arms = {
				type = horse_archers
				stacks = 3
			}
			men_at_arms = {
				type = light_footmen
				stacks = 4
			}
			location = capital_province
			inheritable = yes
		}
	}
	else_if = {
		limit = { scope:size >= 2000 }
		spawn_army = {
			name = "Steppe Raiders"
			levies = 800
			men_at_arms = {
				type = bowmen
				stacks = 3
			}
			men_at_arms = {
				type = light_horsemen
				stacks = 3
			}
			men_at_arms = {
				type = horse_archers
				stacks = 3
			}
			men_at_arms = {
				type = light_footmen
				stacks = 3
			}
			location = capital_province
			inheritable = yes
		}
	}
	else_if = {
		limit = { scope:size >= 1500 }
		spawn_army = {
			name = "Steppe Raiders"
			levies = 600
			men_at_arms = {
				type = bowmen
				stacks = 2
			}
			men_at_arms = {
				type = light_horsemen
				stacks = 2
			}
			men_at_arms = {
				type = horse_archers
				stacks = 2
			}
			men_at_arms = {
				type = light_footmen
				stacks = 3
			}
			location = capital_province
			inheritable = yes
		}
	}
	else_if = {
		limit = { scope:size >= 1000 }
		spawn_army = {
			name = "Steppe Raiders"
			levies = 400
			men_at_arms = {
				type = bowmen
				stacks = 2
			}
			men_at_arms = {
				type = light_horsemen
				stacks = 1
			}
			men_at_arms = {
				type = horse_archers
				stacks = 1
			}
			men_at_arms = {
				type = light_footmen
				stacks = 2
			}
			location = capital_province
			inheritable = yes
		}
	}
	else_if = {
		limit = { scope:size >= 500 }
		spawn_army = {
			name = "Steppe Raiders"
			levies = 200
			men_at_arms = {
				type = bowmen
				stacks = 1
			}
			men_at_arms = {
				type = light_horsemen
				stacks = 1
			}
			men_at_arms = {
				type = light_footmen
				stacks = 1
			}
			location = capital_province
			inheritable = yes
		}
	}
}

start_vandalic_war_effect = {

	global_var:justinian_commander = {
		add_character_flag = STOP_ADMIN
	}

	title:c_mahdiya = {
		save_temporary_scope_as = current_county
	}
	create_title_and_vassal_change = {
		type = usurped
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:current_county = {
		change_title_holder = {
			holder = global_var:justinian_commander
			change = scope:change
			take_baronies = yes
		}
	}
	resolve_title_and_vassal_change = scope:change

	if = {
		limit = {
			exists = title:e_byzantium.holder
			NOT = { global_var:justinian_commander.top_liege = title:e_byzantium.holder }
		}
		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change_two
			add_claim_on_loss = no
		}
		global_var:justinian_commander = {
			change_liege = {
				liege = title:e_byzantium.holder
				change = scope:change_two
			}
		}
		resolve_title_and_vassal_change = scope:change_two
	}

	global_var:justinian_commander = {
		every_sub_realm_county = {
			limit = {
				tier = tier_county
				empire = { this = title:e_byzantium }
			}
			# Grab the county for ease of reference.
			save_temporary_scope_as = current_county
			# Create an elevated peasant to claim the county.
			create_character = {
				location = scope:current_county.title_province
				template = old_country_local_warlord_template
				save_temporary_scope_as = local_warlord
			}
			# Assign the seceding title to the new upstart.
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
				}
			hidden_effect = {
				scope:current_county = {
					change_title_holder = {
						holder = scope:local_warlord
						change = scope:change
						take_baronies = yes
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
			if = {
				limit = {
					exists = title:e_byzantium.holder
				}
				# And give them their independence.
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				hidden_effect = {
					scope:local_warlord = {
						#becomes_independent = { change = scope:change }
						change_liege = {
							liege = title:e_byzantium.holder
							change = scope:change
						}
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		if = {
			limit = {
				exists = title:e_byzantium.holder
			}
			every_vassal = {
				limit = {
					capital_county.empire = title:e_byzantium
				}
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				hidden_effect = {
					change_liege = {
						liege = title:e_byzantium.holder
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		every_held_title = {
			limit = {
				tier >= tier_duchy
				is_titular = no
			}
			add_to_list = list_to_return
		}
		every_in_list = {
			list = list_to_return
			save_scope_as = title_to_return
			global_var:justinian_commander = { destroy_title = scope:title_to_return }
		}
	}

	#Need to put this here after duchy title transfer for admin
	title:c_mahdiya = {
		save_temporary_scope_as = current_county
	}
	create_title_and_vassal_change = {
		type = usurped
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:current_county = {
		change_title_holder = {
			holder = global_var:justinian_commander
			change = scope:change
			take_baronies = yes
		}
	}
	resolve_title_and_vassal_change = scope:change

	global_var:justinian_commander = {
		trigger_event = {
			id = western_roman.0042
			days = 1
		}
		start_war = {
			cb = vandalic_war_cb
			target = title:k_vandals.holder
			target_title = title:k_vandals
			claimant = global_var:justinian_commander
		}
	}
}

end_vandalic_war_africae_effect = {
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_africae = {
		save_scope_as = title_k_africae
	}
	title:k_africae = {
		set_de_jure_liege_title = scope:justinian_commander.top_liege.primary_title
		change_title_holder = {
			holder = scope:justinian_commander
			change = scope:title_change
		}
		save_scope_as = title_k_africae
	}
	resolve_title_and_vassal_change = scope:title_change
	restore_africae_effect = yes

	scope:justinian_commander = {
		destroy_title = title:k_vandals
	}
}

start_gothic_war_effect = {
	if = {
		limit = {
			NOT = { title:c_trapani.holder = global_var:justinian_gothic_commander }
			NOT = { title:c_trapani.holder = character:belisarius_001 }
			trigger_if = {
				limit = {
					exists = title:k_vandals.holder
				}
				NOT = { title:c_trapani.holder.top_liege = title:k_vandals.holder }
			}
		}
		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:justinian_gothic_commander
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
	if = {
		limit = {
			global_var:justinian_gothic_commander = {
				is_landed = no
			}
		}
		title:c_malta = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:justinian_gothic_commander
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
	#title:k_ostrogoths.holder = {
	#	every_sub_realm_county = {
	#		limit = {
	#			NOT = { this = title:c_malta }
	#			NOT = { this = title:c_palermo }
	#			duchy = title:d_sicily
	#		}
	#		save_temporary_scope_as = current_county
	#		create_title_and_vassal_change = {
	#			type = usurped
	#			save_scope_as = change
	#			add_claim_on_loss = no
	#		}
	#		scope:current_county = {
	#			change_title_holder = {
	#				holder = global_var:justinian_gothic_commander
	#				change = scope:change
	#				take_baronies = yes
	#			}
	#		}
	#		resolve_title_and_vassal_change = scope:change
	#	}
	#}

	global_var:justinian_gothic_commander = {
		every_sub_realm_county = {
			limit = {
				tier = tier_county
				empire = { this = title:e_byzantium }
				NOT = {
					duchy = title:d_sicily
				}
			}
			# Grab the county for ease of reference.
			save_temporary_scope_as = current_county
			# Create an elevated peasant to claim the county.
			create_character = {
				location = scope:current_county.title_province
				template = old_country_local_warlord_template
				save_temporary_scope_as = local_warlord
			}
			# Assign the seceding title to the new upstart.
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
				}
			hidden_effect = {
				scope:current_county = {
					change_title_holder = {
						holder = scope:local_warlord
						change = scope:change
						take_baronies = yes
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
			if = {
				limit = {
					exists = title:e_byzantium.holder
				}
				# And give them their independence.
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				hidden_effect = {
					scope:local_warlord = {
						#becomes_independent = { change = scope:change }
						change_liege = {
							liege = title:e_byzantium.holder
							change = scope:change
						}
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		if = {
			limit = {
				exists = title:e_byzantium.holder
			}
			every_vassal = {
				limit = {
					capital_county.empire = title:e_byzantium
				}
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				hidden_effect = {
					change_liege = {
						liege = title:e_byzantium.holder
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		every_held_title = {
			limit = {
				tier >= tier_duchy
			}
			add_to_list = list_to_return
		}
		every_in_list = {
			list = list_to_return
			save_scope_as = title_to_return
			global_var:justinian_gothic_commander = { destroy_title = scope:title_to_return }
		}
	}
	global_var:justinian_gothic_commander = {
		trigger_event = {
			id = germanic_events.0026
			days = 1
		}
		if = {
			limit = {
				exists = title:e_byzantium.holder
				global_var:justinian_gothic_commander = {
					NOT = { top_liege = title:e_byzantium.holder }
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = changev
				add_claim_on_loss = no
			}
			global_var:justinian_gothic_commander = {
				change_liege = {
					liege = title:e_byzantium.holder
					change = scope:changev
				}
			}
			resolve_title_and_vassal_change = scope:changev
		}
	}
	if = {
		limit = {
			title:k_ostrogoths.holder = {
				any_sub_realm_county = {
					duchy = title:d_sicily
				}
			}
		}
		global_var:justinian_gothic_commander = { 
			start_war = {
				casus_belli = gothic_duchy_conquest_cb
				target = title:k_ostrogoths.holder
				target_title = title:d_sicily
				claimant = global_var:justinian_gothic_commander
			}
		}
	}
	else = {
		set_global_variable = {
			name = gothic_attacker_1
			value = global_var:justinian_gothic_commander
		}
		if = {
			limit = {
				exists = title:k_daciae.holder
				title:k_daciae.holder.top_liege = title:e_byzantium.holder
			}
			set_global_variable = {
				name = gothic_attacker_2
				value = title:k_daciae.holder
			}
		}
		title:e_byzantium.holder = {
			start_war = {
				cb = gothic_war_regular_cb
				target = title:k_ostrogoths.holder
				target_title = title:k_ostrogoths
				claimant = title:e_byzantium.holder
			}
		}
	}
}

end_gothic_war_italia_effect = {
	scope:gothic_war_victor = {
		destroy_title = title:k_italy
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_italia_annonariae = {
		save_scope_as = title_italia_annonariae
	}
	title:k_italia_annonariae = {
		set_de_jure_liege_title = scope:gothic_war_victor.primary_title
		change_title_holder = {
			holder = scope:gothic_war_victor
			change = scope:title_change
		}
		save_scope_as = title_italia_annonariae
	}
	resolve_title_and_vassal_change = scope:title_change
	restore_italia_annonariae_effect = yes

	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_italia_suburbicariae = {
		save_scope_as = title_italia_suburbicariae
	}
	title:k_italia_suburbicariae = {
		set_de_jure_liege_title = scope:gothic_war_victor.primary_title
		change_title_holder = {
			holder = scope:gothic_war_victor
			change = scope:title_change
		}
		save_scope_as = title_italia_suburbicariae
	}
	resolve_title_and_vassal_change = scope:title_change
	restore_italia_suburbicariae_effect = yes
}

end_gothic_war_croatia_effect = {
	scope:gothic_war_victor = {
		destroy_title = title:k_croatia
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_pannonia = {
		save_scope_as = title_k_pannonia
	}
	title:k_pannonia = {
		set_de_jure_liege_title = scope:gothic_war_victor.primary_title
		change_title_holder = {
			holder = scope:gothic_war_victor
			change = scope:title_change
		}
		save_scope_as = title_k_pannonia
	}
	resolve_title_and_vassal_change = scope:title_change
	restore_pannonia_effect = yes
}

end_gothic_war_early_effect = {
	if = {
		limit = {
			scope:truce_breakee = {
				any_vassal_or_below = {
					any_character_war = {
						using_cb = gothic_duchy_conquest_cb
					}
				}
			}
		}
		scope:truce_breakee = {
			every_vassal_or_below = {
				every_character_war = {
					limit = {
						using_cb = gothic_duchy_conquest_cb
					}
					end_war = white_peace
				}
			}
		}
	}
	if = {
		limit = {
			AND = {
				exists = title:k_ostrogoths.holder
				title:k_ostrogoths.holder = {
					any_character_war = {
						using_cb = cb_gothic_wars_amalasuntha
					}
				}
			}
		}
		title:k_ostrogoths.holder = {
			every_character_war = {
				limit = {
					using_cb = cb_gothic_wars_amalasuntha
				}
				end_war = white_peace
			}
		}
	}
	if = {
		limit = {
			scope:truce_breakee = {
				any_character_war = {
					using_cb = gothic_war_regular_cb
				}
			}
		}
		scope:truce_breakee = {
			every_character_war = {
				limit = {
					using_cb = gothic_war_regular_cb
				}
				end_war = white_peace
			}
		}
	}
}

tiele_split_532_effect = {
	# Save scopes for player notification events.
	culture:tiele = { save_scope_as = tiele }
	culture:kirghiz = {
		# 'Diverge' this culture by copying innovations. Leave traditions as defined in the database.
		# Kirghiz already exists before the split, do not reset culture creation date
		get_all_innovations_from = culture:tiele

		# Save scope for player notification events.
		save_scope_as = kirghiz
	}
	culture:uyghur = {
		# 'Diverge' this culture by copying innovations. Leave traditions as defined in the database.
		reset_culture_creation_date = yes
		get_all_innovations_from = culture:tiele

		# Save scope for player notification events.
		save_scope_as = uyghur
	}
	culture:uriankhai = {
		# 'Diverge' this culture by copying innovations. Leave traditions as defined in the database.
		# Uriankhai already exists before the split, do not reset culture creation date
		get_all_innovations_from = culture:tiele

		# Save scope for player notification events.
		save_scope_as = uriankhai
	}
	culture:tujue = {
		# 'Diverge' this culture by copying innovations. Leave traditions as defined in the database.
		reset_culture_creation_date = yes
		get_all_innovations_from = culture:tiele

		# Save scope for player notification events.
		save_scope_as = tujue
	}


	every_county = {
		limit = {
			OR = {
				culture = culture:tiele
				county_has_specific_large_minority_culture_trigger = {
					CULTURE = culture:tiele
				}
				county_has_specific_small_minority_culture_trigger = {
					CULTURE = culture:tiele
				}
			}
			title_province = {	
				OR = {					
					geographical_region = custom_tiele
				}		
			}
		}
		add_to_list = tiele_counties
	}

	# Convert the tiele counties to the new culture.
	every_in_list = {
		list = tiele_counties
		limit = {
			# Same-culture players get an event informing them of their county's conversion *before* it happens (for their provinces only).
			NOT = {
				holder = {
					OR = {
						AND = {
							is_ai = no
							culture = culture:tiele
						}
						any_liege_or_above = {
							is_ai = no
							culture = culture:tiele
						}
					}
				}
			}
		}

		# Tujue
		convert_county_and_holder_if_in_region_effect = {
			OLD_CULTURE = culture:tiele
			NEW_CULTURE = culture:tujue
			REGION = custom_tujue
		}

		# Kirghiz
		convert_county_and_holder_if_in_region_effect = {
			OLD_CULTURE = culture:tiele
			NEW_CULTURE = culture:kirghiz
			REGION = custom_kirghiz
		}

		# Uriankhai
		convert_county_and_holder_if_in_region_effect = {
			OLD_CULTURE = culture:tiele
			NEW_CULTURE = culture:uriankhai
			REGION = custom_uriankhai
		}

		# All remaining tiele counties become Uyghur
		convert_county_and_holder_if_in_region_effect = {
			OLD_CULTURE = culture:tiele
			NEW_CULTURE = culture:uyghur
			REGION = custom_tiele
		}
	}

	# Send the appropraite notification event to each player.
	every_player = {
		if = {
			limit = {
				culture = culture:tiele
				any_sub_realm_county = {
					culture = culture:tiele
					title_province = {
						OR = {
							geographical_region = custom_tiele
						}
					}
				}
			}
			if = {
				limit = {
					capital_province = {
						geographical_region = custom_tujue
					}
				}
				culture:tujue = { save_scope_as = my_new_culture }
			}
			else_if = {
				limit = {
					capital_province = {
						geographical_region = custom_kirghiz
					}
				}
				culture:kirghiz = { save_scope_as = my_new_culture }
			}
			else_if = {
				limit = {
					capital_province = {
						geographical_region = custom_uriankhai
					}
				}
				culture:uriankhai = { save_scope_as = my_new_culture }
			}
			else = {
				culture:uyghur = { save_scope_as = my_new_culture }
			}
	
			culture = { save_scope_as = old_culture }
			convert_player_realm_from_old_culture_to_new_effect = {
				OLD_CULTURE = culture:tiele
				NEW_CULTURE = scope:my_new_culture
			}
		}
	}
}

start_suebi_migration_effect = {
	if = {
		limit = {
			scope:suebi_king = {
				has_title = title:k_quadi
			}
			NOT = { exists = title:k_suebi.holder }
		}
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:k_suebi = {
			change_title_holder = {
				holder = scope:suebi_king
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		scope:suebi_king = { destroy_title = title:k_quadi }
	}
	if = {
		limit = {
			exists = title:d_galicia.holder
		}
		scope:suebi_king = {
			start_war = {
				cb = event_germanic_migration_cb 
				target = title:d_galicia.holder.top_liege
				target_title = title:d_galicia
			}
		}
	}
	else = {
		every_county_in_region = {
			region = custom_roman_hispania
			limit = {
				NOT = {
					is_in_list = suebi_target_list
				}
				duchy = {
					NOT = { this = title:d_mallorca }
				}
			}
			add_to_list = suebi_target_list
		}
		random_in_list = {
			list = suebi_target_list
			save_scope_as = suebi_target
			weight = {
				base = 1
				modifier = {
					add = 100
					duchy = title:d_galicia
				}
			}
		}
		scope:suebi_king = {
			start_war = {
				cb = event_germanic_migration_cb 
				target = scope:suebi_target.holder.top_liege
				target_title = scope:suebi_target.duchy
			}
		}
	}
}

start_hasdingi_migration_effect = {
	if = {
		limit = {
			exists = title:d_badajoz.holder
		}
		scope:vandal_king1 = {
			start_war = {
				cb = event_germanic_migration_cb 
				target = title:d_badajoz.holder.top_liege
				target_title = title:d_badajoz
			}
		}
	}
	else = {
		every_county_in_region = {
			region = custom_roman_hispania
			limit = {
				NOT = {
					is_in_list = vandal1_target_list
				}
				duchy = {
					NOT = { this = title:d_mallorca }
				}
			}
			add_to_list = vandal1_target_list
		}
		random_in_list = {
			list = vandal1_target_list
			save_scope_as = vandal1_target
			weight = {
				base = 1
				modifier = {
					add = 100
					duchy = title:d_badajoz
				}
			}
		}
		scope:vandal_king1 = {
			start_war = {
				cb = event_germanic_migration_cb 
				target = scope:vandal1_target.holder.top_liege
				target_title = scope:vandal1_target.duchy
			}
		}
	}
}

start_silingi_migration_effect = {
	if = {
		limit = {
			exists = title:d_cordoba.holder
		}
		scope:vandal_king2 = {
			start_war = {
				cb = event_germanic_migration_cb 
				target = title:d_cordoba.holder.top_liege
				target_title = title:d_cordoba
			}
		}
	}
	else = {
		every_county_in_region = {
			region = custom_roman_hispania
			limit = {
				NOT = {
					is_in_list = vandal2_target_list
				}
				duchy = {
					NOT = { this = title:d_mallorca }
				}
			}
			add_to_list = vandal2_target_list
		}
		random_in_list = {
			list = vandal2_target_list
			save_scope_as = vandal2_target
			weight = {
				base = 1
				modifier = {
					add = 100
					duchy = title:d_cordoba
				}
			}
		}
		scope:vandal_king2 = {
			start_war = {
				cb = event_germanic_migration_cb 
				target = scope:vandal2_target.holder.top_liege
				target_title = scope:vandal2_target.duchy
			}
		}
	}
}

start_alan_migration_effect = {
	scope:alan_king = {
		change_government = nomadic_government
	}
	if = {
		limit = {
			exists = title:d_aquitaine.holder
		}

		scope:alan_king = {
			start_war = {
				cb = event_nomadic_migration_cb 
				target = title:d_aquitaine.holder.top_liege
				target_title = title:d_aquitaine
			}
		}
	}
	else = {
		every_county_in_region = {
			region = septem_provinciae_diocese_region
			limit = {
				NOT = {
					is_in_list = alan_target_list
				}
			}
			add_to_list = alan_target_list
		}
		random_in_list = {
			list = alan_target_list
			save_scope_as = alan_target
			weight = {
				base = 1
				modifier = {
					add = 100
					duchy = title:d_aquitaine
				}
			}
		}
		scope:alan_king = {
			start_war = {
				cb = event_nomadic_migration_cb 
				target = scope:alan_target.holder.top_liege
				target_title = scope:alan_target.duchy
			}
		}
	}
}

# A wild Suebi appears!
spawn_suebi_character_effect = {
	title:c_zatec.title_province = {
		save_scope_as = suebi_birthplace
	}

	create_character = {
		name = "Hermerich"
		gender = male
		location = scope:suebi_birthplace
		template = suebi_leader_character_template
		save_scope_as = suebi_king
	}

	scope:suebi_king = {
	# Make temporarily immune to disease
		add_character_flag = {
			flag = immune_to_disease
			years = 16
		}
	}
}

# A wild Alan appears!
spawn_alan_character_effect = {
	title:c_breisgau.title_province = {
		save_scope_as = alan_birthplace
	}

	create_character = {
		name = "Aslan"
		gender = male
		location = scope:alan_birthplace
		template = alan_leader_character_template
		save_scope_as = alan_king
	}

	scope:alan_king = {
	# Make temporarily immune to disease
		add_character_flag = {
			flag = immune_to_disease
			years = 16
		}
	}
}

# A wild Vandal appears!
spawn_vandal1_character_effect = {
	title:c_komarom.title_province = {
		save_scope_as = vandal1_birthplace
	}

	create_character = {
		name = "Guntharix"
		gender = male
		location = scope:vandal1_birthplace
		template = vandal_leader_character_template
		save_scope_as = vandal_king1
	}

	scope:vandal_king1 = {
	# Make temporarily immune to disease
		add_character_flag = {
			flag = immune_to_disease
			years = 16
		}
	}
}

# A wild Vandal appears!
spawn_vandal2_character_effect = {
	title:c_spreewald.title_province = {
		save_scope_as = vandal2_birthplace
	}

	create_character = {
		name = "Fredebal"
		gender = male
		location = scope:vandal2_birthplace
		template = vandal_leader_character_template
		save_scope_as = vandal_king2
	}

	scope:vandal_king2 = {
	# Make temporarily immune to disease
		add_character_flag = {
			flag = immune_to_disease
			years = 16
		}
	}
}

#Override vanilla to take into account new governments

admin_government_reset_effect = {
	if = {
		limit = { is_landed = yes } # error suppression
		### TRIBAL - are all of your holdings Tribal?
		if = {
			limit = {
				NOT = {
					any_held_title = {
						trigger_if = {
							limit = { tier <= tier_county }
							title_province ?= {
								NOT = { has_holding_type = tribal_holding }
							}
						}
						trigger_else = {
							title_capital_county.title_province ?= {
								NOT = { has_holding_type = tribal_holding }
							}
						}
					}
				}
			}
			if = {
				limit = { 
					culture = { has_cultural_tradition = tradition_nomadic_migrations }
				}
				change_government = nomadic_government
			}
			else = { change_government = tribal_government }
		}
		### CLAN - are you a Muslim or from a Clan culture?
		else_if = {
			limit = {
				OR = {
					faith = { religion_tag = islam_religion }
				}
			}
			change_government = clan_government
		}
		### FEUDAL - fallback playable case
		else = { change_government = feudal_government }
	}
}

ep3_become_landed_transfer_effect = {
	$TITLE_RECEIVER$ = {
		if = {
			limit = { character:90028 ?= this }
			custom_tooltip = ep3_story_cycle_harrying.3053.b.tt
			add_character_flag = hereward_settled_flag
		}
		set_variable = {
			name = ascended_throne_reason
			value = $REASON$
			weeks = 1
		}
		save_scope_value_as = {
			name = ascended_throne_value
			value = $REASON$
		}
	}
	create_title_and_vassal_change = {
		type = $TYPE$
		add_claim_on_loss = yes
		save_scope_as = title_change
	}
	scope:target.holder ?= {
		save_scope_as = old_holder
		switch = {
			trigger = government_has_flag
			government_is_tribal = {
				save_scope_value_as = { name = old_government value = flag:tribal }
			}
			government_is_feudal = {
				save_scope_value_as = { name = old_government value = flag:feudal }
			}
			government_is_administrative = {
				save_scope_value_as = { name = old_government value = flag:admin }
			}
			government_is_clan = {
				save_scope_value_as = { name = old_government value = flag:clan }
			}
			government_is_muslim = {
				save_scope_value_as = { name = old_government value = flag:muslim }
			}
			government_is_caliphate = {
				save_scope_value_as = { name = old_government value = flag:caliphate }
			}
			government_is_gupta = {
				save_scope_value_as = { name = old_government value = flag:gupta }
			}
		}
	}
	every_in_list = {
		list = $TITLE_LIST$
		limit = {
			is_leased_out = no
			is_landless_type_title = no
			is_head_of_faith = no
			tier >= tier_county
		}
		change_title_holder_include_vassals = {
			holder = $TITLE_RECEIVER$
			change = scope:title_change
			take_baronies = no
		}
	}
	ordered_in_list = {
		list = $TITLE_LIST$
		order_by = tier
		save_scope_as = new_primary_title
	}
	if = {
		limit = {
			NOT = { exists = scope:new_capital }
		}
		ordered_in_list = {
			list = $TITLE_LIST$
			limit = { tier = tier_county }
			order_by = development_level
			save_scope_as = new_capital
		}
	}
	if = {
		limit = { has_character_flag = special_laamp_char }
		resolve_title_and_vassal_change = scope:title_change
		# Then we resolve vassalage separately, so that we can lock in tiers.
		create_title_and_vassal_change = {
			type = $TYPE$
			add_claim_on_loss = yes
			save_scope_as = title_change
		}
	}
	if = {
		limit = { 
			exists = scope:new_liege 
			trigger_if = {
				limit = {
					exists = scope:ascended_throne_value
				}
				NOT = { scope:ascended_throne_value = flag:conquest }
			}
		}
		$TITLE_RECEIVER$ = {
			change_liege = {
				liege = scope:new_liege
				change = scope:title_change
			}
		}
	}
	else_if = {
		limit = { is_independent_ruler = no }
		becomes_independent = { change = scope:title_change }
	}
	resolve_title_and_vassal_change = scope:title_change
	$TITLE_RECEIVER$ = {
		# Change our government according to the government of our liege.
		## Administrative.
		if = {
			limit = {
				OR = {
					scope:new_liege ?= { government_has_flag = government_is_administrative }
					scope:old_government ?= flag:admin
				}
			}
			change_government = administrative_government
		}
		## Clan.
		else_if = {
			limit = {
				faith.religion = religion:islam_religion
				OR = {
					scope:new_liege ?= { government_has_flag = government_is_clan }
					scope:old_government ?= flag:clan
					scope:new_liege ?= { government_has_flag = government_is_muslim }
					scope:old_government ?= flag:muslim
					scope:new_liege ?= { government_has_flag = government_is_caliphate }
					scope:old_government ?= flag:caliphate
				}
			}
			if = {
				limit = {
					OR = {
						scope:new_liege ?= { government_has_flag = government_is_muslim }
						scope:old_government ?= flag:muslim
						scope:new_liege ?= { government_has_flag = government_is_caliphate }
						scope:old_government ?= flag:caliphate
					}
				}
				change_government = muslim_government
			}
			else = { change_government = clan_government }
		}
		else_if = {
			limit = {
				OR = {
					faith.religion = { is_in_family = rf_eastern }
					culture = { has_cultural_pillar = heritage_indo_aryan }
					culture = { has_cultural_pillar = heritage_dravidian }
				}
				OR = {
					scope:new_liege ?= { government_has_flag = government_is_gupta }
					scope:old_government ?= flag:gupta
				}
			}
			change_government = gupta_government
		}
		else_if = {
			limit = {
				scope:new_liege ?= { government_has_flag = government_is_eranshar }
			}
			change_government = eranshar_government
		}
		## Tribal.
		else_if = {
			limit = {
				OR = {
					scope:new_liege ?= { government_has_flag = government_is_tribal }
					scope:old_government ?= flag:tribal
				}
			}
			if = { 
				limit = {
					culture = { has_cultural_tradition = tradition_nomadic_migrations }
				}
				change_government = nomadic_government
			}
			else = { change_government = tribal_government }
		}
		## Else feudal.
		else = { change_government = feudal_government }
		if = {
			limit = {
				calc_true_if = {
					amount = 3
					prestige_level <= 3
					scope:new_capital.culture ?= {
						NOR = {
							$TITLE_RECEIVER$.culture ?= this
							$TITLE_RECEIVER$.primary_spouse.culture ?= this
							$TITLE_RECEIVER$.primary_heir.culture ?= this
						}
					}
					scope:new_capital.faith != faith
				}
			}
			custom_tooltip = ep3_ennobled_adventurer_modifier_reason_3
			add_character_modifier = {
				modifier = ep3_ennobled_adventurer_modifier_3
				years = 30
			}
			custom_tooltip = ep3_ennobled_adventurer_modifier_rules
		}
		else_if = {
			limit = {
				calc_true_if = {
					amount = 2
					prestige_level <= 3
					scope:new_capital.culture ?= {
						NOR = {
							$TITLE_RECEIVER$.culture ?= this
							$TITLE_RECEIVER$.primary_spouse.culture ?= this
							$TITLE_RECEIVER$.primary_heir.culture ?= this
						}
					}
					scope:new_capital.faith != faith
				}
			}
			custom_tooltip = ep3_ennobled_adventurer_modifier_reason_2
			add_character_modifier = {
				modifier = ep3_ennobled_adventurer_modifier_2
				years = 20
			}
			custom_tooltip = ep3_ennobled_adventurer_modifier_rules
		}
		else_if = {
			limit = {
				calc_true_if = {
					amount = 1
					prestige_level <= 3 
					scope:new_capital.culture ?= {
						NOR = {
							$TITLE_RECEIVER$.culture ?= this
							$TITLE_RECEIVER$.primary_spouse.culture ?= this
							$TITLE_RECEIVER$.primary_heir.culture ?= this
						}
					}
					scope:new_capital.faith != faith
				}
			}
			custom_tooltip = ep3_ennobled_adventurer_modifier_reason_1
			add_character_modifier = {
				modifier = ep3_ennobled_adventurer_modifier_1
				years = 10
			}
			custom_tooltip = ep3_ennobled_adventurer_modifier_rules
		}
	}
	destroy_laamp_effect = { ADVENTURER = $TITLE_RECEIVER$ }
}