britannia_struggle_hostility_ender_effect = {
	give_nickname = nick_the_conqueror
	dynasty = { add_dynasty_prestige = 10000 }
}

britannia_struggle_ending_involved_list_effect = {
	save_scope_as = struggle_ender
	struggle:britannia_struggle = {
		every_involved_ruler = {
			limit = {
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }
			}
			add_to_list = struggle_involvees
		}
	}
	# Add all involved cultures with counties to a list, for war checks
	britannia_struggle_ending_culture_list_effect = yes
	# Add all involved faiths with counties to a list, for marriage and holy war checks
	britannia_struggle_ending_faith_list_effect = yes
}

# Add all Involved cultures with counties to a list
britannia_struggle_ending_culture_list_effect = {
	every_culture_global = {		
		limit = {
			save_temporary_scope_as = this_culture
			struggle:britannia_struggle = { is_culture_involved_in_struggle = scope:this_culture }
			culture_number_of_counties > 0
		}
		save_scope_as = culture_scope
		add_to_global_variable_list = {
			name = fp2_struggle_ending_culture_list
			target = scope:culture_scope
		}
	}
}

# Add all Involved independent rulers to a list
britannia_struggle_ending_involved_list_effect = {
	save_scope_as = struggle_ender
	struggle:britannia_struggle = {
		every_involved_ruler = {
			limit = {
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }
			}
			add_to_list = struggle_involvees
		}
	}
	# Add all involved cultures with counties to a list, for war checks
	britannia_struggle_ending_culture_list_effect = yes
	# Add all involved faiths with counties to a list, for marriage and holy war checks
	britannia_struggle_ending_faith_list_effect = yes
}

# Add all Involved faiths with counties to a list
britannia_struggle_ending_faith_list_effect = {
	every_religion_global = {
		limit = {
			any_faith = {
				save_temporary_scope_as = this_faith
				struggle:britannia_struggle = { is_faith_involved_in_struggle = scope:this_faith }
				num_county_followers > 0
			}
		}
		every_faith = {
			limit = {
				struggle:britannia_struggle = { is_faith_involved_in_struggle = prev }
				num_county_followers > 0
			}
			save_scope_as = faith_scope
			add_to_global_variable_list = {
				name = fp2_struggle_ending_faith_list
				target = scope:faith_scope
			}
		}
	}
}

formalise_the_daneland_effect = {
	# To start with, remove the partition variable (so that we don't calculate partition resolution whilst taking the alternate route).
	remove_global_variable = partition_active_danelaw
	# Clarify the status of the partition for the player.
	custom_tooltip = formalise_the_daneland_effect.partition_status.tt
	# Sort the title swap.
	## First, flip everything in k_danelaw to k_daneland.
	custom_tooltip = formalise_the_daneland_effect.adjust_de_jures.tt
	hidden_effect = {
		title:k_danelaw = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = title:k_daneland
			}
		}
		# Add k_daneland to whatever empire k_danelaw is part of.
		title:k_daneland = { set_de_jure_liege_title = title:k_danelaw.de_jure_liege }
	}
	## Then, swap the two titles out.
	### Give k_daneland to scope:founder.
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
	}
	title:k_daneland = {
		change_title_holder = {
			holder = scope:founder
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	### Do some assorted aesthetic prep-work on k_daneland.
	hidden_effect = {
		title:k_daneland = {
			# Give them k_danelaw's CoA.
			set_coa = title:k_danelaw
			# & title history.
			copy_title_history = title:k_danelaw
		}
	}
	### Destroy k_danelaw.
	destroy_title = title:k_danelaw
	# All claims on k_danelaw become claims on k_daneland
	title:k_danelaw = {
		every_claimant = {
			custom = formalise_the_daneland_effect.all_claimants
			remove_claim = title:k_danelaw
			add_unpressed_claim = title:k_daneland
		}
	}
	# Step a rivalry with scope:england.
	scope:founder = {
		progress_towards_rival_effect = {
			CHARACTER = scope:england
			OPINION = -75
			REASON = rival_daneland
		}
	}
	# End the struggle
	struggle:britannia_struggle = {
		end_struggle = formalise_the_daneland_decision
	}
}

# Add House modifiers to all Involved rulers
britannia_struggle_conciliation_modifier_rewards_effect = {
	struggle:britannia_struggle = {
		every_involved_ruler = {
			limit = { this = root }
			custom = britannia_struggle_compromise_house_rewards_tt
			show_as_tooltip = { britannia_struggle_conciliation_modifier_rewards_personal_effect = yes }
		}
		every_involved_ruler = {
			limit = {
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }
				exists = house
				NOT = {
					house = { has_house_modifier = britannia_struggle_conciliation_house_reward_modifier }
				}
			}
			hidden_effect = { britannia_struggle_conciliation_modifier_rewards_personal_effect = yes }
		}
	}
}

# Add House modifier to a single character (used in tooltips)
britannia_struggle_conciliation_modifier_rewards_personal_effect = {
	house = {
		add_house_modifier = {
			modifier = britannia_struggle_conciliation_house_reward_modifier
		}
	}
}

# Add cultural acceptance between Involved cultures
britannia_struggle_conciliation_cultural_acceptance_effect = {
	hidden_effect = {
		while = {
			limit = {
				any_in_global_list = {
					variable = britannia_struggle_ending_culture_list
					NOT = { has_variable = britannia_struggle_conciliation_flag }
				}
			}
			ordered_in_global_list = {
				variable = britannia_struggle_ending_culture_list
				limit = {
					NOT = { has_variable = britannia_struggle_conciliation_flag }
				}
				order_by = culture_number_of_counties
				save_scope_as = culture_scope
				set_variable = britannia_struggle_conciliation_flag # variable ensures acceptance is only gained once per couple
			}
			every_in_global_list = {
				variable = britannia_struggle_ending_culture_list
				limit = {
					NOR = {
						has_variable = britannia_struggle_conciliation_flag
						this = scope:culture_scope
					}
				}
				change_cultural_acceptance = {
					target = scope:culture_scope
					value = britannia_struggle_conciliation_culture_acceptance_value #TODO_CD_BRITANNIA (JP) check if this is enough
					desc = britannia_struggle_conciliation_acceptance_tt
				}
			}
		}
		every_in_global_list = {
			variable = britannia_struggle_ending_culture_list
			remove_variable = britannia_struggle_conciliation_flag
		}
	}
}

britannia_struggle_conciliation_ender_effect = {
	give_nickname = nick_the_equitable
	dynasty = { add_dynasty_prestige = 10000 }
}

britannia_struggle_conciliation_tooltip_effect = {
	# Hispania is available!
	custom_tooltip = britannia_struggle_can_create_empire_of_britannia_tt
	# All Involved cultures gain acceptance of each other
	custom_tooltip = britannia_struggle_conciliation_culture_tt
	# Interfaith marriage unlocked for Involved cultures
	custom_tooltip = britannia_struggle_conciliation_marriage_unlocked_tt
	# Declaring holy wars is perma-disabled for locals in the region
	custom_tooltip = britannia_struggle_conciliation_holy_war_disabled_tt 
	# Involved cultures/faiths can offer to join defensive wars with outsiders targetting Iberia
	custom_tooltip = britannia_struggle_conciliation_join_war_tt
}

tfe_struggle_compromise_ender_effect = {
	give_nickname = nick_the_pragmatic
	dynasty = { add_dynasty_prestige = 10000 }
}

tfe_struggle_compromise_tooltip_effect = {
	# De Jure Kingdoms will become De Jure Empires
	custom_tooltip = struggle_compromise_duchy_transfer_tt
	custom_tooltip = tfe_struggle_compromise_create_new_empires_tt
	# RIP Hispania
	custom_tooltip = tfe_struggle_compromise_destroy_britannia_tt
	if = {
		limit = {
			struggle:britannia_struggle = {
				any_involved_ruler = {
					count > 1
					is_independent_ruler = yes
					primary_title = { is_mercenary_company = no }
				}
			}
			# Every Involved ruler gets a 10 year truce with every other
			custom_tooltip = fp2_struggle_compromise_truce_tt
		}
	}
	custom_tooltip = fp2_struggle_compromise_war_cost_tt
}


tfe_struggle_compromise_modifier_rewards_effect = {
	struggle:britannia_struggle = {
		show_as_tooltip = {
			every_involved_ruler = {
				limit = { this = root }
				custom = fp2_struggle_compromise_house_rewards_tt
				fp2_struggle_compromise_modifier_rewards_personal_house_effect = yes
			}
			every_involved_ruler = {
				limit = { this = root }
				custom = fp2_struggle_compromise_defensive_rewards_tt
				fp2_struggle_compromise_modifier_rewards_personal_county_effect = yes
			}
		}
		hidden_effect = {
			every_involved_ruler = {
				limit = {
					is_independent_ruler = yes
					primary_title = { is_mercenary_company = no }
					exists = house
					NOT = {
						house = { has_house_modifier = fp2_struggle_compromise_house_reward_modifier }
					}
				}
				fp2_struggle_compromise_modifier_rewards_personal_house_effect = yes
			}
			every_involved_ruler = {
				limit = {
					is_independent_ruler = yes
					primary_title = { is_mercenary_company = no }
				}
				fp2_struggle_compromise_modifier_rewards_personal_county_effect = yes
			}
		}
	}
}

britannia_struggle_compromise_duchies_to_kingdoms_effect = {
	hidden_effect = {
		title:e_britannia = {
			# Cycle through de jure duchies held by independent dukes
			every_in_de_jure_hierarchy = {
				# Prefer primary titles
				limit = {
					this = this.holder.primary_title
					fp2_struggle_ending_compromise_independent_duchy_trigger = yes
				}
				# Then capital titles
				alternative_limit = {
					this.title_capital_county = this.kingdom.title_capital_county
					fp2_struggle_ending_compromise_independent_duchy_trigger = yes
				}
				alternative_limit = { fp2_struggle_ending_compromise_independent_duchy_trigger = yes }
				save_scope_as = old_title
				britannia_struggle_compromise_create_new_kingdom_effect = { TYPE = NEW FETCH = scope:old_title }
			}
			# Cycle through titular duchies held by independent dukes (e.g. Zaragoza)
			every_in_list = {
				list = titular_iberian_duchies
				save_scope_as = special_duchy
				if = {
					# Independent holder who controls at least 50% a de jure duchy, and no kingdom has the same as that duchy
					limit = { fp2_struggle_ending_compromise_titular_trigger = yes }
					title:e_britannia = {
						random_in_de_jure_hierarchy = {
							limit = {
								tier = tier_duchy
								any_direct_de_jure_vassal_title = {
									percent >= 0.5
									holder.top_liege = scope:special_duchy.holder
								}
							}
							save_scope_as = old_title
						}
					}
					britannia_struggle_compromise_create_new_kingdom_effect = { TYPE = SPECIAL FETCH = scope:special_duchy }
				}
			}
			# Cycle through uncreated de jure duchies to split if needed (e.g. Coimbra)
			every_in_de_jure_hierarchy = {
				limit = { fp2_struggle_ending_compromise_split_duchy_trigger = yes }
			    save_scope_as = old_title
				britannia_struggle_compromise_create_new_kingdom_effect = { TYPE = NEW FETCH = scope:old_title }
			}
		}
	}
}

britannia_struggle_compromise_create_new_kingdom_effect = {
	add_to_list = duchy_kingdom
	create_dynamic_title = {
		tier = kingdom
		name = $TYPE$_CREATED_TITLE_NAME
	}
	scope:old_title = {
		# Edge case for kingdoms which do not control their own capital duchy
		if = {
			limit = {
				title_capital_county = de_jure_liege.title_capital_county
				exists = de_jure_liege.holder
				NOT = { holder = de_jure_liege.holder }
			}
			de_jure_liege = {
				# So kingdom has a capital
				set_capital_county = this.holder.capital_county
				# So titles do not share CoAs
				set_coa = this.holder.house
			}
		}
		set_de_jure_liege_title = scope:new_title
	}
	scope:new_title = {
		set_coa = $FETCH$
		set_color_from_title = $FETCH$
		set_capital_county = $FETCH$.title_capital_county
		set_de_jure_liege_title = title:e_britannia
	}
}

britannia_struggle_compromise_transfer_duchies_effect = {
	title:e_britannia = {
		while = {
			limit = {
				any_in_de_jure_hierarchy = { fp2_struggle_compromise_transfer_duchy_trigger = yes }
			}
			every_in_de_jure_hierarchy = {
				limit = { fp2_struggle_compromise_transfer_duchy_trigger = yes }
				add_to_list = transferred_duchies
				# To ensure kingdom's capitals are always inside them
				if = {
					limit = { title_capital_county = kingdom.title_capital_county }
					kingdom = {
						save_scope_as = old_kingdom
						if = {
							limit = {
								any_direct_de_jure_vassal_title = {
									NOT = { is_in_list = transferred_duchies }
									title_capital_county.kingdom = scope:old_kingdom
								}
							}
							random_direct_de_jure_vassal_title = {
								limit = {
									NOT = { is_in_list = transferred_duchies }
									title_capital_county.kingdom = scope:old_kingdom
								}
								title_capital_county = { save_scope_as = new_capital }
							}
							set_capital_county = scope:new_capital
						}
					}
				}
				if = {
					limit = { title_capital_county.holder.top_liege.primary_title.tier = tier_kingdom }
					set_de_jure_liege_title = title_capital_county.holder.top_liege.primary_title
				}
				else = { set_de_jure_liege_title = title_capital_county.holder.top_liege.capital_county.kingdom }
			}
		}
	}
}
# Create new de jure empires from relevant kingdoms
britannia_struggle_compromise_kingdoms_to_empires_effect = {
	hidden_effect = {
		title:e_britannia = {
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_kingdom
					any_in_de_jure_hierarchy = {
						count >= fp2_struggle_compromise_ending_minimal_empire_size
						tier = tier_county
					}
				}
				fp2_struggle_compromise_create_new_empire_effect = yes
			}
		}
	}
}

# Distribute remaining Kingdoms to neighboring empires
britannia_struggle_compromise_distribute_kingdoms_to_neighbouring_empires_effect = {
	hidden_effect = {
		title:e_britannia = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				save_scope_as = kingdom_to_distribute
				random_title_to_title_neighboring_and_across_water_kingdom = {
					limit = { # Prefer land borders
						any_this_title_or_de_jure_above = { is_in_list = new_empire_list }
						any_title_to_title_neighboring_kingdom = { this = scope:kingdom_to_distribute }
					}
					alternative_limit = { # Then sea borders
						any_this_title_or_de_jure_above = { is_in_list = new_empire_list }
					}
					weight = {
						modifier = { # Value one from Iberia for small empire
							add = {
								value = 2
								subtract = {
									value = 0
									every_in_de_jure_hierarchy = {
										add = 0.25
									}
								}
								min = 0
							}
							any_in_de_jure_hierarchy = {
			 					tier = tier_county
								title_province = { geographical_region = world_europe_west_britannia }
							}
						}
						modifier = { # Value smaller empire
							add = {
								value = 2
								subtract = {
									value = 0
									every_in_de_jure_hierarchy = {
										limit = { tier = tier_kingdom }
										add = 0.5
									}
								}
								min = 0
							}
						}
						modifier = { # Value most shared borders
							add = {
								value = 0
								every_in_de_jure_hierarchy = {
									limit = {
										tier = tier_county
										any_neighboring_county = { target_is_de_jure_liege_or_above = scope:kingdom_to_distribute }
									}
									add = 1
								}
								min = 0
							}
						}
					}
					add_to_list = transferred_kingdoms
					scope:kingdom_to_distribute = { set_de_jure_liege_title = prev.de_jure_liege }
				}
			}
		}
	}
}

britannia_struggle_compromise_distribute_the_actual_titles = {
	struggle:britannia_struggle = {
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
		}
		every_involved_ruler = {
			limit = {
				save_temporary_scope_as = new_owner_temp
				primary_title = {
					tier = tier_duchy
					exists = de_jure_liege
					de_jure_liege = { tfe_struggle_ending_compromise_create_title_trigger = yes }
				}
			}
			save_scope_as = new_owner
			primary_title.de_jure_liege = {
				change_title_holder = {
					holder = scope:new_owner
					change = scope:change
				}
				add_to_list = assigned_title
			}
		}
		every_involved_ruler = {
			limit = {
				save_temporary_scope_as = new_owner_temp
				primary_title = {
					tier = tier_kingdom
					exists = de_jure_liege
					de_jure_liege = { tfe_struggle_ending_compromise_create_title_trigger = yes }
				}
			}
			save_scope_as = new_owner
			primary_title.de_jure_liege = {
				change_title_holder = {
					holder = scope:new_owner
					change = scope:change
				}
				add_to_list = assigned_title
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
}

britannia_struggle_compromise_truce_effect = {
	hidden_effect = {
		if = {
			limit = {
				struggle:britannia_struggle = {
					any_involved_ruler = {
						count > 1
						is_independent_ruler = yes
						primary_title = { is_mercenary_company = no }
					}
				}
			}
			struggle:britannia_struggle = {
				every_involved_ruler = {
					limit = {
						is_independent_ruler = yes
						primary_title = { is_mercenary_company = no }
					}
					add_to_list = britannia_struggle_compromise_truce_list
				}
			}
			while = {
				limit = {
					any_in_list = {
						list = britannia_struggle_compromise_truce_list
						NOT = { has_variable = fp2_struggle_compromise_flag }
					}
				}
				ordered_in_list = {
					list = britannia_struggle_compromise_truce_list
					limit = {
						NOT = { has_variable = fp2_struggle_compromise_flag }
					}
					order_by = realm_size
					save_scope_as = realm_scope
					set_variable = fp2_struggle_compromise_flag # variable ensures truces are set only once per couple
				}
				every_in_list = {
					list = britannia_struggle_compromise_truce_list
					limit = {
						NOR = {
							has_variable = fp2_struggle_compromise_flag
							this = scope:realm_scope
							has_truce = scope:realm_scope
						}
					}
					add_truce_both_ways = {
						character = scope:realm_scope
						days = 3650
						name = TRUCE_TFE_COMPROMISE
					}
				}
			}
			every_in_list = {
				list = britannia_struggle_compromise_truce_list
				remove_variable = fp2_struggle_compromise_flag
			}
		}
	}
}

britannia_stuggle_ending_involved_list_effect = {
	save_scope_as = struggle_ender
	struggle:britannia_struggle = {
		every_involved_ruler = {
			limit = {
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }
			}
			add_to_list = struggle_involvees
		}
	}
	# Add all involved cultures with counties to a list, for war checks
	britannia_struggle_ending_culture_list_effect = yes
	# Add all involved faiths with counties to a list, for marriage and holy war checks
	britannia_struggle_ending_faith_list_effect = yes
}

britannia_struggle_ending_culture_list_effect = {
	every_culture_global = {		
		limit = {
			#TODO_CD_FP2 (JP) check if this can be more performant, every_struggle_culture would be better
			save_temporary_scope_as = this_culture
			struggle:britannia_struggle = { is_culture_involved_in_struggle = scope:this_culture }
			culture_number_of_counties > 0
		}
		save_scope_as = culture_scope
		add_to_global_variable_list = {
			name = britannia_struggle_ending_culture_list
			target = scope:culture_scope
		}
	}
}
britannia_struggle_ending_faith_list_effect = {
	every_religion_global = {
		limit = {
			any_faith = {
				save_temporary_scope_as = this_faith
				struggle:britannia_struggle = { is_faith_involved_in_struggle = scope:this_faith }
				num_county_followers > 0
			}
		}
		every_faith = {
			limit = {
				struggle:britannia_struggle = { is_faith_involved_in_struggle = prev }
				num_county_followers > 0
			}
			save_scope_as = faith_scope
			add_to_global_variable_list = {
				name = britannia_struggle_ending_faith_list
				target = scope:faith_scope
			}
		}
	}
}

britannia_struggle_compromise_tooltip_effect = {
	# De Jure Kingdoms will become De Jure Empires
	custom_tooltip = struggle_compromise_duchy_transfer_tt
	custom_tooltip = tfe_struggle_compromise_create_new_empires_tt
	# RIP Hispania
	custom_tooltip = tfe_struggle_compromise_destroy_britannia_tt
	if = {
		limit = {
			struggle:britannia_struggle = {
				any_involved_ruler = {
					count > 1
					is_independent_ruler = yes
					primary_title = { is_mercenary_company = no }
				}
			}
			# Every Involved ruler gets a 10 year truce with every other
			custom_tooltip = fp2_struggle_compromise_truce_tt
		}
	}
	custom_tooltip = fp2_struggle_compromise_war_cost_tt
}