types tradewidgets {
    type tradewindow = window {
            parentanchor = top|right
			datacontext = "[GetVariableSystem]"
			datacontext = "[GetPlayer]"
			
			layer = windows_layer
            movable = no
			
            using = Window_Size_MainTab
			
            visible = "[GetVariableSystem.Exists('show_resource')]"
            
            state = {
				name = _show
				using = Animation_FadeIn_Quick
				using = Sound_WindowShow_Standard
				using = Window_Position_MainTab
				alpha = 1
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Quick
				using = Sound_WindowHide_Standard
				using = Window_Position_MainTab_Hide
				trigger_when = "[IsRightWindowOpen]"
				alpha = 0
			}
			
			#state = {
			#	name = _dismiss
			#	next = _hide

			#	trigger_when = "[GetVariableSystem.Exists( 'hide_right_windows' )]"
			#}

            background = {
                texture = "gfx/interface/component_tiles/solid_black_label.dds"
                margin_left = -40
                fittype = centercrop
            }
            
    
            margin_widget = {
                size = { 100% 100% }
                margin = { 0 26 }
                margin_right = 13
                
                
				background = {
					texture = "gfx/interface/component_tiles/tile_window_background_subwindow.dds"
					spriteType = Corneredtiled
					spriteborder = { 18 18 }
					margin = { -23 -17 }
					margin_left = -20
					margin_bottom = 20
					texture_density = 2
		
					modify_texture = {
						name = "overlay"
						texture = "gfx/interface/component_overlay/overlay_effect.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
					}
				}
                vbox = {
                    layoutpolicy_horizontal = expanding
                    margin_right = 20 #this is vanilla margin
    			    margin_bottom = 70 #this prevents the scrollarea from extending behind the hud
                    vbox = {
                        using = Window_Margins
                        layoutpolicy_horizontal = expanding
    
                        header_pattern = {
                            layoutpolicy_horizontal = expanding
    
                            blockoverride "header_text"
                            {
                                text = "TRADE_TEXT"
                            }
                            blockoverride "button_close"
                            {
                                onclick = "[GetVariableSystem.Toggle('show_resource')]"
                            }
                            expand = {}
                        }
                    } 
                    vbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                        margin = { 40 0 }
                        ignoreinvisible = yes
                        scrollbox = {
                            layoutpolicy_horizontal = expanding
                            layoutpolicy_vertical = expanding
                            blockoverride "scrollbox_content"
                            {
                                vbox = {
                                    dynamicgridbox = {
                                        datamodel = "[GetGlobalList('tradenodes')]"
                                        item = {
                                            flowcontainer = {
                                                direction = horizontal
                                                datacontext = "[Scope.Province.GetTitle]"
                                                ignoreinvisible = yes
                                                margin = { -250 0}
                                                
                                                coa_title_medium = {
                                                }
                                                
                                                vbox = {
                                                    text_single = {
                                                        name = "trade_title"
                                                        text = "TRADE_NODE_TITLE"
                                                        default_format = "#high"
                                                        using = Font_Size_Medium
                                                    }
                                                    divider_light = {
                                                        layoutpolicy_horizontal = expanding
                                                    }
                                                    text_single = {
                                                        name = "trade_power_value"
                                                        text = "TRADE_POWER_TEXT"
                                                        using = Font_Size_Medium
                                                    }	
                                                    divider_light = {
                                                        layoutpolicy_horizontal = expanding
                                                    }
                                                    text_single = {
                                                        name = "global_trade_power_value"
                                                        text = "GLOBAL_TRADE_POWER_TEXT"
                                                        using = Font_Size_Medium
                                                    }

                                                    divider_light = {
                                                        layoutpolicy_horizontal = expanding
                                                    }
                                                }
                                                spacer = {
                                                    size = {5 0}
                                                }
                                                icon = {
                                                    texture = "gfx/interface/icons/message_feed/money.dds"
                                                    visible = "[EqualTo_string(Scope.Province.GetHolding.GetType.GetKey,'trade_center_holding')]"
                                                    size = { 40 40 }
                                                    tooltipwidget = {
                                                        widget = {
                                                            using = DefaultTooltipBackground
                                                            size = {200 100}
                                                            vbox = {
                                                                margin = { 15 10 }
                                                                spacing = 10
                                                                set_parent_size_to_minimum = yes
                                                                minimumsize = { 150 0 }
                                                                text_single = {
                                                                    layoutpolicy_horizontal = expanding
                                                                    text = "TRADE_CENTER_TEXT"
                                                                    background = {
                                                                        using = Background_Area
                                                                        margin = { 10 0 }
                                                                        margin_bottom = 5
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                icon = {
                                                    texture = "gfx/interface/skinned/hud_maintab/maintab_trade_blocked.dds"
                                                    visible = "[Scope.Province.MakeScope.Var('blockade').IsSet]"
                                                    size = { 40 40 }
                                                    tooltipwidget = {
                                                        widget = {
                                                            using = DefaultTooltipBackground
                                                            size = {200 100}
                                                            vbox = {
                                                                margin = { 15 10 }
                                                                spacing = 10
                                                                set_parent_size_to_minimum = yes
                                                                minimumsize = { 150 0 }
                                                                text_single = {
                                                                    layoutpolicy_horizontal = expanding
                                                                    text = "NODE_BLOCKADE_TEXT"
                                                                    background = {
                                                                        using = Background_Area
                                                                        margin = { 10 0 }
                                                                        margin_bottom = 5
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
		}
    }
}